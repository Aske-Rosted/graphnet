Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.i3particleextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3quesoextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.i3particleextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3quesoextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "parquet", "parquet_dataconverter", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "graphs", "edges", "edges", "graph_definition", "graphs", "nodes", "nodes", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99], "i": [0, 1, 14, 16, 27, 28, 29, 34, 35, 38, 39, 75, 77, 81, 83, 88, 89, 92, 93, 94, 97, 98, 99], "an": [0, 5, 29, 31, 34, 39, 92, 94, 97, 98, 99], "open": [0, 97, 98], "sourc": [0, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 34, 35, 37, 38, 39, 74, 75, 77, 81, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98], "python": [0, 1, 5, 13, 14, 16, 27, 29, 97, 98, 99], "framework": [0, 98], "aim": [0, 1, 97, 98], "provid": [0, 1, 97, 98, 99], "high": [0, 98], "qualiti": [0, 98], "user": [0, 77, 98, 99], "friendli": [0, 98], "end": [0, 1, 5, 31, 34, 98], "function": [0, 5, 29, 35, 38, 74, 75, 82, 87, 88, 89, 92, 93, 95, 98], "perform": [0, 98], "reconstruct": [0, 1, 15, 17, 18, 22, 23, 25, 40, 44, 68, 98], "task": [0, 1, 44, 97, 98], "neutrino": [0, 1, 74, 98], "telescop": [0, 1, 98], "us": [0, 1, 2, 4, 5, 14, 19, 24, 26, 27, 31, 34, 35, 36, 37, 39, 40, 74, 77, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 94, 97, 98, 99], "graph": [0, 1, 44, 97, 98], "neural": [0, 1, 98], "network": [0, 1, 98], "gnn": [0, 1, 44, 98, 99], "make": [0, 5, 81, 87, 88, 97, 98, 99], "fast": [0, 98, 99], "easi": [0, 98], "train": [0, 1, 39, 40, 77, 81, 83, 87, 88, 90, 96, 98, 99], "complex": [0, 98], "model": [0, 1, 40, 75, 76, 77, 83, 85, 87, 88, 90, 96, 98, 99], "can": [0, 1, 14, 16, 19, 37, 74, 75, 81, 83, 85, 87, 88, 97, 98, 99], "event": [0, 1, 21, 35, 37, 39, 74, 81, 87, 98], "state": [0, 98], "art": [0, 98], "arbitrari": [0, 98], "detector": [0, 1, 24, 44, 98], "configur": [0, 1, 74, 82, 84, 85, 87, 88, 90, 94, 98], "infer": [0, 1, 40, 98, 99], "time": [0, 4, 35, 94, 98, 99], "ar": [0, 1, 4, 5, 16, 29, 31, 34, 37, 39, 74, 81, 87, 88, 97, 98, 99], "order": [0, 27, 98], "magnitud": [0, 98], "faster": [0, 98], "than": [0, 94, 98], "tradit": [0, 98], "techniqu": [0, 98], "common": [0, 1, 85, 87, 88, 90, 91, 93, 98], "ml": [0, 1, 98], "develop": [0, 1, 97, 98, 99], "physicist": [0, 1, 98], "wish": [0, 97, 98], "tool": [0, 1, 98], "research": [0, 98], "By": [0, 37, 98], "unit": [0, 5, 93, 97, 98], "both": [0, 16, 75, 98], "group": [0, 5, 31, 34, 98], "increas": [0, 77, 98], "longev": [0, 98], "usabl": [0, 98], "individu": [0, 5, 98], "code": [0, 24, 35, 87, 88, 98], "contribut": [0, 98, 99], "from": [0, 1, 13, 14, 16, 18, 19, 21, 27, 28, 29, 34, 37, 75, 77, 85, 86, 87, 88, 90, 94, 97, 98, 99], "build": [0, 1, 85, 87, 88, 98], "gener": [0, 5, 16, 98], "reusabl": [0, 98], "softwar": [0, 98], "packag": [0, 1, 38, 89, 92, 93, 97, 98, 99], "base": [0, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 34, 37, 39, 74, 77, 81, 83, 85, 86, 87, 88, 90, 93, 94, 98], "engin": [0, 98], "best": [0, 97, 98], "practic": [0, 97, 98], "lower": [0, 75, 98], "technic": [0, 98], "threshold": [0, 98], "most": [0, 1, 39, 98, 99], "scientif": [0, 1, 98], "problem": [0, 97, 98], "The": [0, 5, 27, 29, 34, 35, 74, 75, 77, 98], "improv": [0, 1, 83, 98], "classif": [0, 1, 44, 68, 98], "yield": [0, 74, 98], "veri": [0, 39, 98], "accur": [0, 98], "e": [0, 1, 5, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 31, 34, 35, 39, 77, 81, 85, 94, 97, 98, 99], "g": [0, 1, 5, 24, 27, 29, 31, 34, 35, 39, 81, 94, 97, 98, 99], "low": [0, 98], "energi": [0, 4, 81, 98], "observ": [0, 98], "icecub": [0, 1, 15, 28, 29, 44, 49, 93, 98, 99], "here": [0, 97, 98, 99], "implement": [0, 1, 5, 14, 30, 31, 33, 34, 97, 98], "wa": [0, 98], "appli": [0, 14, 89, 98], "oscil": [0, 73, 98], "lead": [0, 98], "signific": [0, 98], "angular": [0, 98], "rang": [0, 98], "relev": [0, 1, 29, 38, 92, 97, 98], "studi": [0, 98], "furthermor": [0, 98], "shown": [0, 98], "could": [0, 97, 98], "muon": [0, 18, 98], "v": [0, 98], "therebi": [0, 1, 87, 88, 98], "effici": [0, 98], "puriti": [0, 98], "sampl": [0, 39, 98], "analysi": [0, 98, 99], "similarli": [0, 29, 98], "ha": [0, 5, 29, 31, 34, 35, 92, 98, 99], "great": [0, 98], "point": [0, 23, 98], "analys": [0, 40, 73, 98], "final": [0, 77, 87, 98], "millisecond": [0, 98], "allow": [0, 40, 77, 85, 90, 98, 99], "whole": [0, 98], "new": [0, 1, 34, 85, 90, 97, 98], "type": [0, 5, 13, 14, 26, 27, 28, 31, 34, 35, 37, 38, 39, 74, 75, 77, 81, 83, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98], "cosmic": [0, 98], "alert": [0, 98], "which": [0, 14, 15, 24, 28, 39, 74, 83, 98, 99], "were": [0, 98], "previous": [0, 98], "unfeas": [0, 98], "possibl": [0, 27, 97, 98], "identifi": [0, 5, 24, 87, 88, 98], "10": [0, 83, 98], "tev": [0, 98], "monitor": [0, 98], "rate": [0, 77, 98], "direct": [0, 98], "real": [0, 98], "thi": [0, 3, 5, 14, 16, 29, 31, 34, 35, 38, 74, 75, 77, 81, 85, 87, 88, 90, 94, 97, 98, 99], "enabl": [0, 3, 98], "first": [0, 77, 85, 90, 97, 98], "ever": [0, 98], "despit": [0, 98], "larg": [0, 98], "background": [0, 98], "origin": [0, 74, 98], "compris": [0, 98], "number": [0, 5, 31, 34, 39, 77, 83, 98], "modul": [0, 3, 29, 40, 73, 76, 82, 84, 87, 88, 89, 90, 93, 98], "necessari": [0, 27, 97, 98], "workflow": [0, 98], "ingest": [0, 1, 3, 98], "raw": [0, 98], "data": [0, 1, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 83, 85, 87, 90, 93, 96, 98, 99], "domain": [0, 1, 3, 40, 98], "specif": [0, 1, 3, 5, 15, 29, 30, 31, 33, 34, 35, 40, 97, 98, 99], "format": [0, 1, 3, 5, 27, 31, 34, 75, 87, 97, 98, 99], "deploi": [0, 1, 40, 98], "chain": [0, 1, 40, 98, 99], "illustr": [0, 97, 98], "figur": [0, 75, 98], "level": [0, 24, 35, 94, 98, 99], "overview": [0, 98], "typic": [0, 27, 98], "convert": [0, 1, 3, 5, 27, 31, 34, 37, 98, 99], "industri": [0, 3, 98], "standard": [0, 3, 4, 5, 31, 34, 39, 83, 97, 98], "intermedi": [0, 1, 3, 5, 31, 34, 98, 99], "file": [0, 1, 3, 5, 14, 27, 31, 34, 37, 38, 74, 77, 83, 84, 85, 86, 87, 88, 92, 94, 98, 99], "read": [0, 3, 27, 98, 99], "simpl": [0, 98], "physic": [0, 1, 14, 28, 29, 40, 98], "orient": [0, 98], "compon": [0, 1, 44, 98], "manag": [0, 14, 76, 98], "experi": [0, 1, 76, 98], "log": [0, 1, 76, 77, 82, 98, 99], "deploy": [0, 1, 41, 96, 98], "modular": [0, 98], "subclass": [0, 98], "torch": [0, 93, 98, 99], "nn": [0, 98], "mean": [0, 5, 31, 34, 88, 98], "onli": [0, 1, 74, 81, 88, 93, 98, 99], "need": [0, 27, 98, 99], "import": [0, 1, 35, 82, 98], "few": [0, 97, 98], "exist": [0, 34, 35, 87, 98], "purpos": [0, 98], "built": [0, 98], "them": [0, 1, 27, 74, 98, 99], "togeth": [0, 98], "form": [0, 85, 90, 98], "complet": [0, 98], "extend": [0, 1, 98], "suit": [0, 98], "through": [0, 98], "layer": [0, 44, 46, 98], "connect": [0, 98], "etc": [0, 94, 98], "optimis": [0, 1, 98], "differ": [0, 14, 97, 98, 99], "track": [0, 14, 18, 97, 98], "These": [0, 97, 98], "prepar": [0, 98], "satisfi": [0, 98], "o": [0, 98], "load": [0, 38, 85, 87, 98], "requir": [0, 20, 35, 87, 88, 90, 98, 99], "when": [0, 5, 27, 31, 34, 35, 94, 97, 98, 99], "batch": [0, 83, 98], "do": [0, 87, 88, 97, 98, 99], "predict": [0, 19, 23, 25, 98], "either": [0, 98, 99], "contain": [0, 5, 27, 28, 31, 34, 81, 83, 98, 99], "imag": [0, 1, 97, 98, 99], "portabl": [0, 98], "depend": [0, 98, 99], "free": [0, 98], "split": [0, 98], "up": [0, 5, 31, 34, 97, 98, 99], "interfac": [0, 73, 87, 88, 98, 99], "block": [0, 1, 98], "pre": [0, 97, 98], "directli": [0, 14, 98], "while": [0, 16, 77, 98], "continu": [0, 98], "expand": [0, 98], "": [0, 5, 14, 27, 34, 37, 77, 81, 83, 87, 88, 94, 95, 98, 99], "capabl": [0, 98], "project": [0, 97, 98], "receiv": [0, 98], "fund": [0, 98], "european": [0, 98], "union": [0, 16, 27, 29, 87, 90, 92, 98], "horizon": [0, 98], "2020": [0, 98], "innov": [0, 98], "programm": [0, 98], "under": [0, 98], "mari": [0, 98], "sk\u0142odowska": [0, 98], "curi": [0, 98], "grant": [0, 98], "agreement": [0, 97, 98], "No": [0, 98], "890778": [0, 98], "work": [0, 4, 28, 97, 98, 99], "rasmu": [0, 98], "\u00f8rs\u00f8e": [0, 98], "partli": [0, 98], "punch4nfdi": [0, 98], "consortium": [0, 98], "support": [0, 29, 97, 98, 99], "dfg": [0, 98], "nfdi": [0, 98], "39": [0, 98, 99], "1": [0, 5, 27, 31, 34, 39, 77, 81, 87, 98, 99], "germani": [0, 98], "conveni": [1, 97, 99], "collabor": 1, "solv": [1, 97], "It": [1, 27, 35, 97], "leverag": 1, "advanc": 1, "machin": [1, 99], "learn": [1, 77, 99], "without": [1, 74, 99], "have": [1, 5, 16, 31, 34, 35, 39, 97, 99], "expert": 1, "themselv": [1, 87, 88], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 14, 16, 31, 34, 35, 85, 86, 87, 88, 89, 90, 94, 97, 99], "streamlin": 1, "process": [1, 5, 14, 97, 99], "transform": [1, 81], "extens": [1, 92], "basic": 1, "across": [1, 2, 29, 36, 82, 83, 84, 94], "variou": 1, "easili": 1, "architectur": 1, "main": [1, 97, 99], "featur": [1, 3, 4, 5, 15, 87, 97], "i3": [1, 5, 14, 28, 29, 31, 34, 38, 92, 99], "more": [1, 35, 38, 85, 87, 88, 90, 94], "index": [1, 5, 29, 35, 77], "sqlite": [1, 3, 7, 34, 35, 37, 99], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 86], "awai": 1, "detail": [1, 99], "expos": 1, "physicst": 1, "what": [1, 97], "i3modul": [1, 40], "includ": [1, 74, 85, 97], "docker": 1, "run": [1, 37], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 7, 13, 40, 44, 59, 82], "dataset": [1, 3, 18, 39, 83, 87], "extractor": [1, 3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34], "parquet": [1, 3, 7, 31, 37, 99], "util": [1, 3, 13, 27, 28, 29, 35, 37, 38, 39, 44, 76, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96], "constant": [1, 3, 96], "dataconvert": [1, 3, 31, 34], "dataload": [1, 3, 90], "pipelin": [1, 3], "coarsen": [1, 44], "standard_model": [1, 44], "pisa": [1, 20, 74, 75, 93, 96, 99], "fit": [1, 73, 75, 81, 90], "plot": [1, 73], "callback": [1, 76], "label": [1, 18, 21, 75, 76], "loss_funct": [1, 76], "weight_fit": [1, 76], "config": [1, 39, 74, 82, 83, 85, 86, 87, 88, 89, 90], "argpars": [1, 82], "decor": [1, 5, 82, 93], "filesi": [1, 82], "math": [1, 82], "submodul": [1, 3, 7, 9, 11, 13, 26, 30, 33, 36, 41, 44, 46, 49, 53, 59, 60, 64, 68, 73, 76, 82, 84, 89], "global": [2, 4], "i3extractor": [3, 5, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 34], "i3featureextractor": [3, 4, 13, 34], "i3genericextractor": [3, 13, 34], "i3hybridrecoextractor": [3, 13], "i3ntmuonlabelsextractor": [3, 13], "i3particleextractor": [3, 13], "i3pisaextractor": [3, 13], "i3quesoextractor": [3, 13], "i3retroextractor": [3, 13], "i3splinempeextractor": [3, 13], "i3truthextractor": [3, 4, 13], "i3tumextractor": [3, 13], "parquet_dataconvert": [3, 30], "sqlite_dataconvert": [3, 33], "sqlite_util": [3, 33], "parquet_to_sqlit": [3, 36], "random": [3, 36, 39, 87], "string_selection_resolv": [3, 36], "truth": [3, 4, 15, 24, 35, 81, 87], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "class": [4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 33, 34, 37, 39, 74, 77, 81, 83, 85, 86, 87, 88, 89, 90, 94, 97], "object": [4, 5, 14, 16, 27, 29, 74, 83, 94], "namespac": [4, 87, 88], "name": [4, 5, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 34, 35, 37, 74, 81, 83, 85, 87, 88, 89, 90, 94, 97, 99], "icecube86": 4, "dom_x": 4, "dom_i": 4, "dom_z": 4, "dom_tim": 4, "charg": 4, "rde": 4, "pmt_area": 4, "deepcor": [4, 15], "upgrad": [4, 15, 99], "string": [4, 5, 27, 31, 34, 39, 85], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 44, 49], "sensor_pos_x": 4, "sensor_pos_i": 4, "sensor_pos_z": 4, "t": [4, 29, 35, 75, 77, 99], "kaggl": 4, "x": [4, 5, 24, 31, 34, 75, 81], "y": [4, 24, 75, 99], "z": [4, 5, 24, 31, 34, 99], "auxiliari": 4, "energy_track": 4, "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": 4, "zenith": 4, "pid": [4, 39, 87], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": 4, "inelast": 4, "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 14], "str": [5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 34, 35, 37, 38, 39, 74, 81, 83, 85, 86, 87, 88, 89, 90, 92, 94], "gcd_file": [5, 14], "paramet": [5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 34, 35, 37, 38, 39, 74, 75, 77, 81, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95], "output_fil": [5, 31, 34], "global_index": 5, "avail": [5, 16, 93], "pool": [5, 44, 46], "worker": [5, 31, 34, 38, 83, 94], "return": [5, 14, 27, 28, 29, 31, 34, 35, 37, 38, 39, 74, 75, 77, 81, 83, 85, 86, 87, 88, 89, 92, 93, 94, 95], "none": [5, 14, 16, 24, 28, 29, 31, 34, 35, 37, 39, 74, 77, 81, 83, 85, 86, 87, 89, 92, 94], "synchron": 5, "list": [5, 14, 16, 24, 27, 29, 31, 34, 35, 37, 38, 39, 75, 77, 81, 87, 89, 90, 92, 94], "process_method": 5, "cach": 5, "output": [5, 31, 34, 37, 74, 81, 87, 88, 99], "typevar": 5, "f": 5, "bound": [5, 75], "callabl": [5, 29, 81, 85, 87, 88, 89, 93], "ani": [5, 27, 28, 29, 31, 34, 75, 81, 83, 85, 86, 87, 88, 89, 90, 94, 99], "outdir": [5, 31, 34, 37, 74], "gcd_rescu": [5, 31, 34, 92], "nb_files_to_batch": [5, 31, 34], "sequential_batch_pattern": [5, 31, 34], "input_file_batch_pattern": [5, 31, 34], "index_column": [5, 31, 34, 35, 39, 74, 81, 87], "icetray_verbos": [5, 31, 34], "abc": [5, 14, 81, 86, 87, 88], "logger": [5, 14, 37, 39, 81, 82, 94, 99], "construct": [5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 34, 37, 39, 74, 77, 81, 83, 86, 87, 88, 94], "regular": [5, 29, 31, 34], "express": [5, 31, 34], "accord": [5, 31, 34], "match": [5, 31, 34, 81, 92, 95], "certain": [5, 31, 34, 37, 74], "pattern": [5, 31, 34], "wildcard": [5, 31, 34], "same": [5, 29, 31, 34, 35, 77, 89, 94], "input": [5, 31, 34, 85, 90], "replac": [5, 31, 34, 85, 87, 88, 90], "period": [5, 31, 34], "special": [5, 16, 31, 34], "interpret": [5, 31, 34], "liter": [5, 31, 34], "charact": [5, 31, 34], "regex": [5, 31, 34], "For": [5, 29, 31, 34, 77], "instanc": [5, 14, 24, 29, 31, 34, 74, 86, 88, 99], "A": [5, 31, 34, 74, 81, 99], "_": [5, 31, 34], "0": [5, 31, 34, 39, 74, 75, 87], "9": [5, 31, 34], "5": [5, 31, 34, 39, 83, 99], "zst": [5, 31, 34], "find": [5, 31, 34, 92], "whose": [5, 31, 34], "one": [5, 31, 34, 35, 87, 88, 92, 97, 99], "capit": [5, 31, 34], "letter": [5, 31, 34], "follow": [5, 31, 34, 81, 97, 99], "underscor": [5, 31, 34], "five": [5, 31, 34], "upgrade_genie_step4_141020_a_000000": [5, 31, 34], "upgrade_genie_step4_141020_a_000001": [5, 31, 34], "upgrade_genie_step4_141020_a_000008": [5, 31, 34], "upgrade_genie_step4_141020_a_000009": [5, 31, 34], "would": [5, 31, 34, 97], "upgrade_genie_step4_141020_a_00000x": [5, 31, 34], "suffix": [5, 31, 34], "upgrade_genie_step4_141020_a_000010": [5, 31, 34], "separ": [5, 27, 31, 34, 77, 99], "upgrade_genie_step4_141020_a_00001x": [5, 31, 34], "int": [5, 18, 21, 31, 34, 39, 74, 77, 81, 83, 87, 90, 94], "properti": [5, 14, 19, 29, 86, 94], "file_suffix": [5, 31, 34], "execut": [5, 35], "method": [5, 14, 26, 27, 28, 29, 31, 34, 81], "set": [5, 16, 97], "inherit": [5, 14, 29, 94], "path": [5, 35, 38, 74, 75, 83, 85, 86, 87, 92, 99], "correspond": [5, 27, 29, 34, 38, 81, 92, 99], "gcd": [5, 14, 28, 38, 92], "save_data": [5, 31, 34], "save": [5, 14, 27, 31, 34, 35, 74, 81, 85, 86, 87, 88, 99], "ordereddict": [5, 31, 34], "extract": [5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 34, 37, 38], "merge_fil": [5, 31, 34], "input_fil": [5, 31, 34], "merg": [5, 31, 34, 99], "result": [5, 31, 34, 77, 89, 99], "option": [5, 24, 31, 34, 74, 75, 81, 82, 83, 85, 87, 92, 99], "default": [5, 16, 24, 27, 31, 34, 35, 37, 74, 75, 77, 81, 83, 85, 87, 92], "current": [5, 31, 34, 39, 77, 97, 99], "rais": [5, 16, 31, 85, 90], "notimplementederror": [5, 31], "If": [5, 16, 31, 34, 74, 77, 81, 97, 99], "been": [5, 31, 97], "backend": [5, 31, 34], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 15, 16, 34, 35, 85, 87, 88, 90], "pure": [5, 13, 14, 16, 29], "multiprocess": [5, 99], "tupl": [5, 28, 29, 74, 75, 83], "parquet_dataset": [7, 9], "sqlite_dataset": [7, 11], "collect": [13, 14, 26, 95], "i3fram": [13, 14, 16, 28, 29], "frame": [13, 14, 16, 26, 29, 34], "i3extractorcollect": [13, 14], "i3featureextractoricecube86": [13, 15], "i3featureextractoricecubedeepcor": [13, 15], "i3featureextractoricecubeupgrad": [13, 15], "i3pulsenoisetruthflagicecubeupgrad": [13, 15], "i3galacticplanehybridrecoextractor": [13, 17], "i3ntmuonlabelextractor": [13, 18], "i3splinempeicextractor": [13, 23], "inform": [14, 16, 24, 75], "should": [14, 27, 39, 85, 87, 88, 90, 97, 99], "__call__": 14, "icetrai": [14, 28, 29, 93], "keep": 14, "proven": 14, "tabl": [14, 34, 35, 74, 81], "set_fil": 14, "store": [14, 35, 74], "refer": [14, 87], "being": 14, "get": [14, 28, 77, 99], "multipl": [14, 77, 87, 94], "treat": 14, "singl": [14, 87, 88], "pulsemap": [15, 34, 87], "puls": [15, 16, 28, 29, 34, 35], "seri": [15, 16, 28, 29, 35], "86": 15, "nois": [15, 28], "flag": 15, "ad": [15, 74], "kei": [16, 27, 28, 29, 34, 35, 87, 88], "exclude_kei": 16, "dynam": 16, "pars": [16, 75, 82, 83, 84, 85, 90], "call": [16, 29, 34, 74, 81, 94], "tri": [16, 29], "automat": [16, 97], "cast": [16, 29], "done": [16, 94, 97], "recurs": [16, 29, 89, 92], "each": [16, 27, 29, 35, 37, 38, 74, 75, 77, 92], "look": [16, 99], "member": [16, 29, 87, 88, 94], "variabl": [16, 29, 81, 94], "signatur": [16, 29], "similar": [16, 29, 99], "dict": [16, 27, 29, 34, 74, 75, 77, 83, 85, 87, 88, 89, 90], "handl": [16, 83, 94], "hand": 16, "case": [16, 99], "per": [16, 35, 81], "mc": [16, 34, 35], "tree": [16, 34], "trigger": 16, "exclud": [16, 37, 99], "valueerror": 16, "hybrid": 17, "galatict": 17, "plane": 17, "tum": [18, 25], "dnn": [18, 25], "padding_valu": [18, 21], "northeren": 18, "i3particl": 19, "other": [19, 35, 97], "algorithm": 19, "comparison": 19, "quantiti": 20, "select": [21, 39, 81, 87, 97], "queso": 21, "retro": 22, "splinemp": 23, "border": 24, "mctree": [24, 28], "ndarrai": [24, 81], "arrai": [24, 27], "boundari": 24, "volum": 24, "coordin": 24, "particl": [24, 35], "start": [24, 97, 99], "stop": [24, 83], "within": 24, "hard": 24, "i3mctre": 24, "valu": [24, 27, 34, 35, 75, 83, 85], "flatten_nested_dictionari": [26, 27], "serialis": [26, 27], "transpose_list_of_dict": [26, 27], "frame_is_montecarlo": [26, 28], "frame_is_nois": [26, 28], "get_om_keys_and_pulseseri": [26, 28], "is_boost_enum": [26, 29], "is_boost_class": [26, 29], "is_icecube_class": [26, 29], "is_typ": [26, 29], "is_method": [26, 29], "break_cyclic_recurs": [26, 29], "get_member_vari": [26, 29], "cast_object_to_pure_python": [26, 29], "cast_pulse_series_to_pure_python": [26, 29], "manipul": 27, "obj": [27, 29, 89], "parent_kei": 27, "flatten": 27, "nest": 27, "dictionari": [27, 28, 29, 34, 74, 75, 85, 87, 88, 90], "non": [27, 29, 34, 35], "exampl": [27, 39, 87, 88, 99], "d": [27, 97], "b": 27, "c": [27, 99], "2": [27, 74, 75, 87, 99], "a__b": 27, "applic": 27, "combin": [27, 87], "parent": 27, "__": [27, 29], "concaten": 27, "nester": 27, "json": [27, 87], "therefor": 27, "we": [27, 29, 39, 97, 99], "element": [27, 29, 89], "outer": 27, "abl": [27, 99], "de": 27, "transpos": 27, "check": [28, 29, 34, 35, 83, 92, 93, 97, 99], "whether": [28, 29, 34, 35, 89, 92, 93], "mont": 28, "carlo": 28, "simul": 28, "bool": [28, 29, 34, 35, 39, 74, 77, 81, 83, 89, 92, 93, 94], "pulseseri": 28, "calibr": [28, 29], "indici": [28, 39], "gcd_dict": [28, 29], "p": [28, 34], "om": [28, 29], "dataclass": 28, "i3calibr": 28, "indicesfor": 28, "boost": 29, "enum": 29, "fn": [29, 85, 89], "ensur": [29, 38, 94, 97, 99], "isn": 29, "return_discard": 29, "valid": [29, 39, 83, 85, 90], "ignor": 29, "mangl": 29, "take": [29, 34, 97], "mainli": 29, "cannot": [29, 85, 90], "trivial": 29, "doe": [29, 88], "try": 29, "length": [29, 77], "equival": 29, "its": 29, "like": [29, 95, 97], "otherwis": 29, "itself": 29, "deem": 29, "wai": [29, 39, 97, 99], "represent": 29, "optic": 29, "found": 29, "parquetdataconvert": [30, 31], "sqlitedataconvert": [33, 34, 99], "construct_datafram": [33, 34], "is_pulse_map": [33, 34], "is_mc_tre": [33, 34], "database_exist": [33, 35], "database_table_exist": [33, 35], "run_sql_cod": [33, 35], "save_to_sql": [33, 35], "attach_index": [33, 35], "create_t": [33, 35], "create_table_and_save_to_sql": [33, 35], "db": 34, "databas": [34, 35, 37, 74, 81, 99], "max_table_s": 34, "maximum": [34, 83], "row": [34, 35], "given": [34, 81, 83], "exce": 34, "limit": 34, "creat": [34, 35, 85, 86, 90, 97, 99], "any_pulsemap_is_non_empti": 34, "data_dict": 34, "empti": 34, "retriev": 34, "splitinicepuls": 34, "least": [34, 97, 99], "true": [34, 35, 74, 77, 81, 87, 88, 90], "becaus": [34, 38], "instead": [34, 85, 90], "alwai": 34, "panda": [34, 39, 81], "datafram": [34, 35, 39, 74, 81], "table_nam": [34, 35], "database_path": [35, 74, 81], "df": 35, "must": [35, 77, 81, 97], "alreadi": [35, 99], "attach": 35, "queri": [35, 39], "column": [35, 74, 81], "default_typ": 35, "null": 35, "integer_primary_kei": 35, "event_no": [35, 39, 81, 87], "NOT": 35, "integ": 35, "primari": 35, "Such": 35, "uniqu": [35, 37, 87], "appropri": 35, "expect": [35, 39], "doesn": 35, "parquettosqliteconvert": [36, 37], "pairwise_shuffl": [36, 38], "stringselectionresolv": [36, 39], "parquet_path": 37, "mc_truth_tabl": 37, "excluded_field": 37, "assign": [37, 97], "id": 37, "everi": [37, 99], "field": [37, 75, 85, 87, 88, 90], "One": [37, 75], "choos": 37, "argument": [37, 81, 83, 85, 87, 88, 90], "exclude_field": 37, "database_nam": 37, "convers": [37, 99], "directori": [37, 74, 92], "rng": 38, "relat": [38, 92], "i3_list": [38, 92], "gcd_list": [38, 92], "shuffl": 38, "correpond": 38, "handi": 38, "even": 38, "files_list": 38, "gcd_shuffl": 38, "i3_shuffl": 38, "resolv": 39, "indic": [39, 77, 83, 97], "seed": [39, 87], "use_cach": 39, "datasetconfig": [39, 84, 87], "flexibl": 39, "defin": [39, 85, 87, 88, 90], "below": [39, 75, 81, 97, 99], "show": [39, 77], "involv": 39, "cover": 39, "yml": [39, 83, 87, 88], "test": [39, 87, 93, 97], "50000": [39, 87], "ab": [39, 87], "12": [39, 87], "14": [39, 87], "16": [39, 87], "13": [39, 99], "10000": 39, "compat": 39, "syntax": 39, "mai": [39, 99], "also": [39, 87], "specifi": [39, 75, 77, 99], "fix": 39, "randomli": [39, 88], "20": [39, 94], "graphnet_modul": [40, 41], "convnet": [44, 53], "dynedg": [44, 53], "dynedge_jinst": [44, 53], "dynedge_kaggle_tito": [44, 53], "edg": [44, 59], "node": [44, 59], "graph_definit": [44, 59, 87], "config_updat": [73, 74], "weightfitt": [73, 74, 76, 81], "contourfitt": [73, 74], "read_entri": [73, 75], "plot_2d_contour": [73, 75], "plot_1d_contour": [73, 75], "contour": [74, 75], "config_path": 74, "new_config_path": 74, "dummy_sect": 74, "updat": [74, 77], "temp": 74, "dummi": 74, "section": 74, "header": 74, "configupdat": 74, "programat": 74, "truth_tabl": [74, 81, 87], "statistical_fit": 74, "weight": [74, 81, 88, 99], "fit_weight": [74, 81], "config_outdir": 74, "weight_nam": [74, 81], "pisa_config_dict": 74, "add_to_databas": [74, 81], "flux": 74, "self": [74, 85, 90], "_database_path": 74, "statist": 74, "effect": [74, 77, 97], "account": 74, "systemat": 74, "hypersurfac": 74, "chang": [74, 97], "assumpt": 74, "regard": 74, "fals": [74, 77, 81, 87], "two": [74, 77], "pipeline_path": 74, "post_fix": 74, "model_nam": 74, "include_retro": 74, "fit_1d_contour": 74, "run_nam": 74, "config_dict": 74, "grid_siz": 74, "n_worker": 74, "theta23_minmax": 74, "36": 74, "54": 74, "dm31_minmax": 74, "3": [74, 75, 97, 99], "7": 74, "1d": [74, 75], "float": [74, 75, 77, 87], "fit_2d_contour": 74, "2d": [74, 75], "entri": [75, 83], "content": 75, "contour_data": 75, "xlim": 75, "4": 75, "6": 75, "ylim": 75, "0023799999999999997": 75, "0025499999999999997": 75, "chi2_critical_valu": 75, "width": 75, "height": 75, "path_to_pisa_fit_result": 75, "name_of_my_model_in_fit": 75, "legend": 75, "color": 75, "linestyl": 75, "style": [75, 97], "line": [75, 77, 83], "upper": 75, "axi": 75, "605": 75, "critic": [75, 94], "chi2": 75, "90": 75, "cl": 75, "note": [75, 88], "right": 75, "176": 75, "inch": 75, "388": 75, "706": 75, "abov": [75, 81, 99], "352": 75, "piecewiselinearlr": [76, 77], "progressbar": [76, 77], "uniform": [76, 81], "bjoernlow": [76, 81], "dure": 77, "optim": 77, "mileston": 77, "factor": 77, "last_epoch": 77, "verbos": 77, "_lrschedul": 77, "interpol": 77, "linearli": 77, "between": [77, 87, 88], "denot": 77, "step": 77, "multipli": 77, "closest": 77, "befor": 77, "vice": 77, "versa": 77, "after": [77, 83, 87], "last": 77, "wrap": [77, 87, 88], "epoch": [77, 83], "print": [77, 94], "messag": [77, 94], "stdout": 77, "get_lr": 77, "refresh_r": 77, "process_posit": 77, "tqdmprogressbar": 77, "custom": 77, "progress": 77, "bar": 77, "customis": 77, "pytorch": [77, 99], "lightn": 77, "init_validation_tqdm": 77, "overrid": 77, "init_predict_tqdm": 77, "init_test_tqdm": 77, "init_train_tqdm": 77, "get_metr": 77, "trainer": 77, "version": [77, 97, 99], "lightningmodul": [77, 94], "on_train_epoch_start": 77, "previou": 77, "see": [77, 97, 99], "loss": [77, 83], "metric": 77, "behaviour": 77, "overwrit": 77, "on_train_epoch_end": 77, "don": [77, 99], "duplciat": 77, "produc": 81, "public": 81, "uniformweightfitt": 81, "bin": 81, "kwarg": [81, 85, 87, 88, 94], "privat": 81, "_fit_weight": 81, "sql": 81, "desir": [81, 92], "space": 81, "np": 81, "log10": 81, "happen": 81, "addit": 81, "pass": [81, 97], "distribut": 81, "x_low": 81, "wherea": 81, "curv": 81, "base_config": [82, 84], "dataset_config": [82, 84], "model_config": [82, 84, 85, 87, 90], "training_config": [82, 84], "argumentpars": [82, 83], "is_gcd_fil": [82, 92], "is_i3_fil": [82, 92], "has_extens": [82, 92], "find_i3_fil": [82, 92], "has_icecube_packag": [82, 93], "has_torch_packag": [82, 93], "has_pisa_packag": [82, 93], "requires_icecub": [82, 93], "repeatfilt": [82, 94], "eps_lik": [82, 95], "consist": [83, 94, 97], "cli": 83, "present": [83, 92, 93], "pop_default": 83, "remov": 83, "usag": 83, "descript": 83, "command": [83, 99], "standard_argu": 83, "size": 83, "128": 83, "help": [83, 97], "home": [83, 99], "runner": 83, "local": 83, "lib": [83, 99], "python3": 83, "training_example_data_sqlit": 83, "earli": 83, "patienc": 83, "gpu": [83, 99], "narg": 83, "max": 83, "50": 83, "example_energy_reconstruction_model": 83, "num": 83, "fetch": 83, "with_standard_argu": 83, "arg": [83, 85, 90, 94], "add": [83, 97, 99], "overwritten": [83, 85], "baseconfig": [84, 85, 86, 87, 88, 90], "get_all_argument_valu": [84, 85], "save_dataset_config": [84, 87], "datasetconfigsavermeta": [84, 87], "datasetconfigsaverabcmeta": [84, 87], "modelconfig": [84, 87, 88], "save_model_config": [84, 88], "modelconfigsavermeta": [84, 88], "modelconfigsaverabc": [84, 88], "traverse_and_appli": [84, 89], "list_all_submodul": [84, 89], "get_all_grapnet_class": [84, 89], "is_graphnet_modul": [84, 89], "is_graphnet_class": [84, 89], "get_graphnet_class": [84, 89], "trainingconfig": [84, 90], "basemodel": [85, 87, 88], "keyword": [85, 90], "validationerror": [85, 90], "pydantic_cor": [85, 90], "__init__": [85, 87, 88, 90, 99], "__pydantic_self__": [85, 90], "classmethod": [85, 86], "dump": [85, 87, 88], "yaml": [85, 86], "as_dict": [85, 87, 88], "repres": [85, 87, 88], "classvar": [85, 87, 88, 90], "configdict": [85, 87, 88, 90], "conform": [85, 87, 88, 90], "pydant": [85, 87, 88, 90], "model_field": [85, 87, 88, 90], "fieldinfo": [85, 87, 88, 90], "metadata": [85, 87, 88, 90], "about": [85, 87, 88, 90], "__fields__": [85, 87, 88, 90], "v1": [85, 87, 88, 90, 99], "re": [86, 99], "save_config": 86, "from_config": [86, 87, 88], "node_truth": 87, "node_truth_t": 87, "string_select": 87, "loss_weight_t": 87, "loss_weight_column": 87, "loss_weight_default_valu": 87, "dataconfig": 87, "transpar": [87, 88, 97], "reproduc": [87, 88], "In": [87, 88, 99], "session": [87, 88], "anoth": [87, 88], "you": [87, 88, 97, 99], "ensembledataset": 87, "still": 87, "csv": 87, "train_select": 87, "test_select": 87, "unambigu": [87, 88], "annot": [87, 88, 90], "nonetyp": 87, "init_fn": [87, 88], "metaclass": [87, 88], "abcmeta": [87, 88], "datasetconfigsav": 87, "class_nam": [88, 94], "trainabl": 88, "hyperparamet": 88, "instanti": 88, "initialis": 88, "thu": 88, "modelconfigsav": 88, "fn_kwarg": 89, "structur": 89, "moduletyp": 89, "grapnet": 89, "lookup": 89, "target": 90, "early_stopping_pati": 90, "system": [92, 99], "filenam": 92, "dir": 92, "search": 92, "test_funct": 93, "filter": 94, "out": [94, 97, 99], "repeat": 94, "nb_repeats_allow": 94, "record": 94, "logrecord": 94, "log_fold": 94, "clear": 94, "intuit": 94, "composit": 94, "rather": 94, "loggeradapt": 94, "chosen": 94, "avoid": [94, 97], "clash": 94, "pytorch_lightn": 94, "setlevel": 94, "deleg": 94, "msg": 94, "error": [94, 97], "warn": 94, "info": [94, 99], "debug": 94, "warning_onc": 94, "exactli": 94, "onc": 94, "handler": 94, "file_handl": 94, "filehandl": 94, "stream_handl": 94, "streamhandl": 94, "assort": 95, "tensor": 95, "ep": 95, "dtype": 95, "api": 96, "To": [97, 99], "sure": [97, 99], "smooth": 97, "guidelin": 97, "guid": 97, "encourag": 97, "contributor": 97, "discuss": 97, "bug": 97, "anyth": 97, "place": 97, "describ": 97, "altern": 97, "yourself": 97, "ownership": 97, "particular": 97, "activ": [97, 99], "prioriti": 97, "situat": 97, "lot": 97, "effort": 97, "go": 97, "turn": 97, "outsid": 97, "scope": 97, "solut": 97, "better": 97, "fork": 97, "repo": 97, "dedic": 97, "branch": [97, 99], "your": [97, 99], "repositori": 97, "graphdefinit": 97, "euclidean": 97, "definit": 97, "own": [97, 99], "team": 97, "accept": 97, "autom": 97, "review": 97, "pep8": 97, "docstr": 97, "googl": 97, "hint": 97, "clean": [97, 99], "8": [97, 99], "adher": 97, "pep": 97, "pylint": 97, "flake8": 97, "black": 97, "well": 97, "recommend": [97, 99], "mypi": 97, "pydocstyl": 97, "docformatt": 97, "commit": 97, "hook": 97, "instal": 97, "come": 97, "tag": [97, 99], "pip": [97, 99], "Then": 97, "everytim": 97, "pep257": 97, "static": 97, "concept": 97, "http": 97, "ljvmiranda921": 97, "io": 97, "notebook": 97, "2018": 97, "06": 97, "21": 97, "precommit": 97, "environ": 99, "virtual": 99, "anaconda": 99, "prove": 99, "instruct": 99, "setup": 99, "want": 99, "part": 99, "runtim": 99, "achiev": 99, "bash": 99, "shell": 99, "eval": 99, "cvmf": 99, "opensciencegrid": 99, "org": 99, "py3": 99, "v4": 99, "sh": 99, "rhel_7_x86_64": 99, "metaproject": 99, "env": 99, "alia": 99, "script": 99, "With": 99, "now": 99, "light": 99, "extra": 99, "geometr": 99, "just": 99, "won": 99, "later": 99, "r": 99, "torch_cpu": 99, "txt": 99, "cpu": 99, "torch_gpu": 99, "prefer": 99, "unix": 99, "git": 99, "clone": 99, "github": 99, "com": 99, "usernam": 99, "cd": 99, "conda": 99, "gcc_linux": 99, "64": 99, "gxx_linux": 99, "libgcc": 99, "cudatoolkit": 99, "11": 99, "forg": 99, "torch_maco": 99, "On": 99, "maco": 99, "box": 99, "compil": 99, "gcc": 99, "date": 99, "possibli": 99, "cuda": 99, "toolkit": 99, "recent": 99, "omit": 99, "newer": 99, "export": 99, "ld_library_path": 99, "anaconda3": 99, "miniconda3": 99, "bashrc": 99, "librari": 99, "access": 99, "so": 99, "intend": 99, "consid": 99, "rm": 99, "asogaard": 99, "latest": 99, "dc423315742c": 99, "01_icetrai": 99, "01_convert_i3_fil": 99, "py": 99, "2023": 99, "01": 99, "24": 99, "41": 99, "27": 99, "write": 99, "graphnet_20230124": 99, "134127": 99, "46": 99, "root": 99, "convert_i3_fil": 99, "ic86": 99, "thread": 99, "100": 99, "00": 99, "79": 99, "42": 99, "26": 99, "413": 99, "88it": 99, "specialis": 99, "ones": 99, "push": 99, "vx": 99}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [40, 0, 0, "-", "deployment"], [73, 0, 0, "-", "pisa"], [76, 0, 0, "-", "training"], [82, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [13, 0, 0, "-", "extractors"], [30, 0, 0, "-", "parquet"], [33, 0, 0, "-", "sqlite"], [36, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.extractors": [[14, 0, 0, "-", "i3extractor"], [15, 0, 0, "-", "i3featureextractor"], [16, 0, 0, "-", "i3genericextractor"], [17, 0, 0, "-", "i3hybridrecoextractor"], [18, 0, 0, "-", "i3ntmuonlabelsextractor"], [19, 0, 0, "-", "i3particleextractor"], [20, 0, 0, "-", "i3pisaextractor"], [21, 0, 0, "-", "i3quesoextractor"], [22, 0, 0, "-", "i3retroextractor"], [23, 0, 0, "-", "i3splinempeextractor"], [24, 0, 0, "-", "i3truthextractor"], [25, 0, 0, "-", "i3tumextractor"], [26, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[14, 1, 1, "", "I3Extractor"], [14, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[14, 4, 1, "", "name"], [14, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[14, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[15, 1, 1, "", "I3FeatureExtractor"], [15, 1, 1, "", "I3FeatureExtractorIceCube86"], [15, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [15, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [15, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[16, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[17, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[18, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3particleextractor": [[19, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[20, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[21, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.i3retroextractor": [[22, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[23, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[24, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[25, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[27, 0, 0, "-", "collections"], [28, 0, 0, "-", "frames"], [29, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[27, 5, 1, "", "flatten_nested_dictionary"], [27, 5, 1, "", "serialise"], [27, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[28, 5, 1, "", "frame_is_montecarlo"], [28, 5, 1, "", "frame_is_noise"], [28, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[29, 5, 1, "", "break_cyclic_recursion"], [29, 5, 1, "", "cast_object_to_pure_python"], [29, 5, 1, "", "cast_pulse_series_to_pure_python"], [29, 5, 1, "", "get_member_variables"], [29, 5, 1, "", "is_boost_class"], [29, 5, 1, "", "is_boost_enum"], [29, 5, 1, "", "is_icecube_class"], [29, 5, 1, "", "is_method"], [29, 5, 1, "", "is_type"]], "graphnet.data.parquet": [[31, 0, 0, "-", "parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataconverter": [[31, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[31, 2, 1, "", "file_suffix"], [31, 3, 1, "", "merge_files"], [31, 3, 1, "", "save_data"]], "graphnet.data.sqlite": [[34, 0, 0, "-", "sqlite_dataconverter"], [35, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[34, 1, 1, "", "SQLiteDataConverter"], [34, 5, 1, "", "construct_dataframe"], [34, 5, 1, "", "is_mc_tree"], [34, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[34, 3, 1, "", "any_pulsemap_is_non_empty"], [34, 2, 1, "", "file_suffix"], [34, 3, 1, "", "merge_files"], [34, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_utilities": [[35, 5, 1, "", "attach_index"], [35, 5, 1, "", "create_table"], [35, 5, 1, "", "create_table_and_save_to_sql"], [35, 5, 1, "", "database_exists"], [35, 5, 1, "", "database_table_exists"], [35, 5, 1, "", "run_sql_code"], [35, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[37, 0, 0, "-", "parquet_to_sqlite"], [38, 0, 0, "-", "random"], [39, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[37, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[37, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[38, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[39, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[39, 3, 1, "", "resolve"]], "graphnet.pisa": [[74, 0, 0, "-", "fitting"], [75, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[74, 1, 1, "", "ContourFitter"], [74, 1, 1, "", "WeightFitter"], [74, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[74, 3, 1, "", "fit_1d_contour"], [74, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[74, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[75, 5, 1, "", "plot_1D_contour"], [75, 5, 1, "", "plot_2D_contour"], [75, 5, 1, "", "read_entry"]], "graphnet.training": [[77, 0, 0, "-", "callbacks"], [81, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[77, 1, 1, "", "PiecewiseLinearLR"], [77, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[77, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[77, 3, 1, "", "get_metrics"], [77, 3, 1, "", "init_predict_tqdm"], [77, 3, 1, "", "init_test_tqdm"], [77, 3, 1, "", "init_train_tqdm"], [77, 3, 1, "", "init_validation_tqdm"], [77, 3, 1, "", "on_train_epoch_end"], [77, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.weight_fitting": [[81, 1, 1, "", "BjoernLow"], [81, 1, 1, "", "Uniform"], [81, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[81, 3, 1, "", "fit"]], "graphnet.utilities": [[83, 0, 0, "-", "argparse"], [84, 0, 0, "-", "config"], [91, 0, 0, "-", "decorators"], [92, 0, 0, "-", "filesys"], [93, 0, 0, "-", "imports"], [94, 0, 0, "-", "logging"], [95, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[83, 1, 1, "", "ArgumentParser"], [83, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[83, 2, 1, "", "standard_arguments"], [83, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[83, 3, 1, "", "contains"], [83, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[85, 0, 0, "-", "base_config"], [86, 0, 0, "-", "configurable"], [87, 0, 0, "-", "dataset_config"], [88, 0, 0, "-", "model_config"], [89, 0, 0, "-", "parsing"], [90, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[85, 1, 1, "", "BaseConfig"], [85, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[85, 3, 1, "", "as_dict"], [85, 3, 1, "", "dump"], [85, 3, 1, "", "load"], [85, 2, 1, "", "model_config"], [85, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[86, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[86, 4, 1, "", "config"], [86, 3, 1, "", "from_config"], [86, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[87, 1, 1, "", "DatasetConfig"], [87, 1, 1, "", "DatasetConfigSaverABCMeta"], [87, 1, 1, "", "DatasetConfigSaverMeta"], [87, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[87, 3, 1, "", "as_dict"], [87, 2, 1, "", "features"], [87, 2, 1, "", "graph_definition"], [87, 2, 1, "", "index_column"], [87, 2, 1, "", "loss_weight_column"], [87, 2, 1, "", "loss_weight_default_value"], [87, 2, 1, "", "loss_weight_table"], [87, 2, 1, "", "model_config"], [87, 2, 1, "", "model_fields"], [87, 2, 1, "", "node_truth"], [87, 2, 1, "", "node_truth_table"], [87, 2, 1, "", "path"], [87, 2, 1, "", "pulsemaps"], [87, 2, 1, "", "seed"], [87, 2, 1, "", "selection"], [87, 2, 1, "", "string_selection"], [87, 2, 1, "", "truth"], [87, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[88, 1, 1, "", "ModelConfig"], [88, 1, 1, "", "ModelConfigSaverABC"], [88, 1, 1, "", "ModelConfigSaverMeta"], [88, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[88, 2, 1, "", "arguments"], [88, 3, 1, "", "as_dict"], [88, 2, 1, "", "class_name"], [88, 2, 1, "", "model_config"], [88, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[89, 5, 1, "", "get_all_grapnet_classes"], [89, 5, 1, "", "get_graphnet_classes"], [89, 5, 1, "", "is_graphnet_class"], [89, 5, 1, "", "is_graphnet_module"], [89, 5, 1, "", "list_all_submodules"], [89, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[90, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[90, 2, 1, "", "dataloader"], [90, 2, 1, "", "early_stopping_patience"], [90, 2, 1, "", "fit"], [90, 2, 1, "", "model_config"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "target"]], "graphnet.utilities.filesys": [[92, 5, 1, "", "find_i3_files"], [92, 5, 1, "", "has_extension"], [92, 5, 1, "", "is_gcd_file"], [92, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[93, 5, 1, "", "has_icecube_package"], [93, 5, 1, "", "has_pisa_package"], [93, 5, 1, "", "has_torch_package"], [93, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[94, 1, 1, "", "Logger"], [94, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[94, 3, 1, "", "critical"], [94, 3, 1, "", "debug"], [94, 3, 1, "", "error"], [94, 4, 1, "", "file_handlers"], [94, 4, 1, "", "handlers"], [94, 3, 1, "", "info"], [94, 3, 1, "", "setLevel"], [94, 4, 1, "", "stream_handlers"], [94, 3, 1, "", "warning"], [94, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[94, 3, 1, "", "filter"], [94, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[95, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"about": [0, 98], "impact": [0, 98], "usag": [0, 98], "acknowledg": [0, 98], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "dataset": [7, 8], "parquet": [9, 30], "parquet_dataset": 10, "sqlite": [11, 33], "sqlite_dataset": 12, "extractor": 13, "i3extractor": 14, "i3featureextractor": 15, "i3genericextractor": 16, "i3hybridrecoextractor": 17, "i3ntmuonlabelsextractor": 18, "i3particleextractor": 19, "i3pisaextractor": 20, "i3quesoextractor": 21, "i3retroextractor": 22, "i3splinempeextractor": 23, "i3truthextractor": 24, "i3tumextractor": 25, "util": [26, 36, 72, 80, 82], "collect": 27, "frame": 28, "type": 29, "parquet_dataconvert": 31, "pipelin": 32, "sqlite_dataconvert": 34, "sqlite_util": 35, "parquet_to_sqlit": 37, "random": 38, "string_selection_resolv": 39, "deploy": [40, 42], "i3modul": 41, "graphnet_modul": 43, "model": [44, 66], "coarsen": 45, "compon": 46, "layer": 47, "pool": 48, "detector": [49, 50], "icecub": 51, "prometheu": 52, "gnn": [53, 58], "convnet": 54, "dynedg": 55, "dynedge_jinst": 56, "dynedge_kaggle_tito": 57, "graph": [59, 63], "edg": [60, 61], "graph_definit": 62, "node": [64, 65], "standard_model": 67, "task": [68, 71], "classif": 69, "reconstruct": 70, "pisa": 73, "fit": 74, "plot": 75, "train": 76, "callback": 77, "label": 78, "loss_funct": 79, "weight_fit": 81, "argpars": 83, "config": 84, "base_config": 85, "configur": 86, "dataset_config": 87, "model_config": 88, "pars": 89, "training_config": 90, "decor": 91, "filesi": 92, "import": 93, "log": 94, "math": 95, "src": 96, "contribut": 97, "github": 97, "issu": 97, "pull": 97, "request": 97, "convent": 97, "code": 97, "qualiti": 97, "instal": 99, "icetrai": 99, "stand": 99, "alon": 99, "run": 99, "docker": 99}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [98, "about"]], "Impact": [[0, "impact"], [98, "impact"]], "Usage": [[0, "usage"], [98, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [98, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "dataloader"]], "dataset": [[7, "dataset"], [8, "dataset"]], "parquet": [[9, "parquet"], [30, "module-graphnet.data.parquet"]], "parquet_dataset": [[10, "parquet-dataset"]], "sqlite": [[11, "sqlite"], [33, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[12, "sqlite-dataset"]], "extractors": [[13, "module-graphnet.data.extractors"]], "i3extractor": [[14, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[15, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[16, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[17, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[18, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor": [[19, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor": [[20, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor": [[21, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor": [[22, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[23, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[24, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[25, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[26, "module-graphnet.data.extractors.utilities"], [36, "module-graphnet.data.utilities"], [82, "module-graphnet.utilities"]], "collections": [[27, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[28, "module-graphnet.data.extractors.utilities.frames"]], "types": [[29, "module-graphnet.data.extractors.utilities.types"]], "parquet_dataconverter": [[31, "module-graphnet.data.parquet.parquet_dataconverter"]], "pipeline": [[32, "pipeline"]], "sqlite_dataconverter": [[34, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_utilities": [[35, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[37, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[38, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[39, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[40, "module-graphnet.deployment"]], "i3modules": [[41, "i3modules"]], "deployer": [[42, "deployer"]], "graphnet_module": [[43, "graphnet-module"]], "models": [[44, "models"]], "coarsening": [[45, "coarsening"]], "components": [[46, "components"]], "layers": [[47, "layers"]], "pool": [[48, "pool"]], "detector": [[49, "detector"], [50, "detector"]], "icecube": [[51, "icecube"]], "prometheus": [[52, "prometheus"]], "gnn": [[53, "gnn"], [58, "gnn"]], "convnet": [[54, "convnet"]], "dynedge": [[55, "dynedge"]], "dynedge_jinst": [[56, "dynedge-jinst"]], "dynedge_kaggle_tito": [[57, "dynedge-kaggle-tito"]], "graphs": [[59, "graphs"], [63, "graphs"]], "edges": [[60, "edges"], [61, "edges"]], "graph_definition": [[62, "graph-definition"]], "nodes": [[64, "nodes"], [65, "nodes"]], "model": [[66, "model"]], "standard_model": [[67, "standard-model"]], "task": [[68, "task"], [71, "task"]], "classification": [[69, "classification"]], "reconstruction": [[70, "reconstruction"]], "utils": [[72, "utils"], [80, "utils"]], "pisa": [[73, "module-graphnet.pisa"]], "fitting": [[74, "module-graphnet.pisa.fitting"]], "plotting": [[75, "module-graphnet.pisa.plotting"]], "training": [[76, "module-graphnet.training"]], "callbacks": [[77, "module-graphnet.training.callbacks"]], "labels": [[78, "labels"]], "loss_functions": [[79, "loss-functions"]], "weight_fitting": [[81, "module-graphnet.training.weight_fitting"]], "argparse": [[83, "module-graphnet.utilities.argparse"]], "config": [[84, "module-graphnet.utilities.config"]], "base_config": [[85, "module-graphnet.utilities.config.base_config"]], "configurable": [[86, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[87, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[88, "module-graphnet.utilities.config.model_config"]], "parsing": [[89, "module-graphnet.utilities.config.parsing"]], "training_config": [[90, "module-graphnet.utilities.config.training_config"]], "decorators": [[91, "module-graphnet.utilities.decorators"]], "filesys": [[92, "module-graphnet.utilities.filesys"]], "imports": [[93, "module-graphnet.utilities.imports"]], "logging": [[94, "module-graphnet.utilities.logging"]], "maths": [[95, "module-graphnet.utilities.maths"]], "src": [[96, "src"]], "Contribute": [[97, "contribute"]], "GitHub issues": [[97, "github-issues"]], "Pull requests": [[97, "pull-requests"]], "Conventions": [[97, "conventions"]], "Code quality": [[97, "code-quality"]], "Install": [[99, "install"]], "Installing with IceTray": [[99, "installing-with-icetray"]], "Installing stand-alone": [[99, "installing-stand-alone"]], "Running in Docker": [[99, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [13, "module-graphnet.data.extractors"], [14, "module-graphnet.data.extractors.i3extractor"], [15, "module-graphnet.data.extractors.i3featureextractor"], [16, "module-graphnet.data.extractors.i3genericextractor"], [17, "module-graphnet.data.extractors.i3hybridrecoextractor"], [18, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"], [19, "module-graphnet.data.extractors.i3particleextractor"], [20, "module-graphnet.data.extractors.i3pisaextractor"], [21, "module-graphnet.data.extractors.i3quesoextractor"], [22, "module-graphnet.data.extractors.i3retroextractor"], [23, "module-graphnet.data.extractors.i3splinempeextractor"], [24, "module-graphnet.data.extractors.i3truthextractor"], [25, "module-graphnet.data.extractors.i3tumextractor"], [26, "module-graphnet.data.extractors.utilities"], [27, "module-graphnet.data.extractors.utilities.collections"], [28, "module-graphnet.data.extractors.utilities.frames"], [29, "module-graphnet.data.extractors.utilities.types"], [30, "module-graphnet.data.parquet"], [31, "module-graphnet.data.parquet.parquet_dataconverter"], [33, "module-graphnet.data.sqlite"], [34, "module-graphnet.data.sqlite.sqlite_dataconverter"], [35, "module-graphnet.data.sqlite.sqlite_utilities"], [36, "module-graphnet.data.utilities"], [37, "module-graphnet.data.utilities.parquet_to_sqlite"], [38, "module-graphnet.data.utilities.random"], [39, "module-graphnet.data.utilities.string_selection_resolver"], [40, "module-graphnet.deployment"], [73, "module-graphnet.pisa"], [74, "module-graphnet.pisa.fitting"], [75, "module-graphnet.pisa.plotting"], [76, "module-graphnet.training"], [77, "module-graphnet.training.callbacks"], [81, "module-graphnet.training.weight_fitting"], [82, "module-graphnet.utilities"], [83, "module-graphnet.utilities.argparse"], [84, "module-graphnet.utilities.config"], [85, "module-graphnet.utilities.config.base_config"], [86, "module-graphnet.utilities.config.configurable"], [87, "module-graphnet.utilities.config.dataset_config"], [88, "module-graphnet.utilities.config.model_config"], [89, "module-graphnet.utilities.config.parsing"], [90, "module-graphnet.utilities.config.training_config"], [91, "module-graphnet.utilities.decorators"], [92, "module-graphnet.utilities.filesys"], [93, "module-graphnet.utilities.imports"], [94, "module-graphnet.utilities.logging"], [95, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "graphnet.data.extractors": [[13, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[14, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[14, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[14, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[14, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[14, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[14, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[15, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[16, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[16, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[17, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[17, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.i3ntmuonlabelsextractor)": [[18, "graphnet.data.extractors.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[18, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.i3particleextractor)": [[19, "graphnet.data.extractors.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.i3particleextractor": [[19, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[20, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[20, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.i3quesoextractor)": [[21, "graphnet.data.extractors.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[21, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[22, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[22, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[23, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[23, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[24, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[24, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[25, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[25, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[26, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[27, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[27, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[27, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[27, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[28, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[28, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[28, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[28, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[29, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_type"]], "graphnet.data.parquet": [[30, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[31, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[31, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[31, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[31, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[31, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "graphnet.data.sqlite": [[33, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[34, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[34, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[34, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[34, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[34, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[34, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[34, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[34, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[34, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[35, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[35, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[35, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[35, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[35, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[35, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[35, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[35, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[36, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[37, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[37, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[37, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[38, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[38, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[39, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[39, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[39, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[40, "module-graphnet.deployment"]], "graphnet.pisa": [[73, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[74, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[74, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[74, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[74, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[74, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[74, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[74, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[75, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[75, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[75, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[75, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[76, "module-graphnet.training"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[77, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[77, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[77, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[77, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[77, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[77, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[77, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[77, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[77, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[77, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[77, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[81, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[81, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[81, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[81, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[81, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[82, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[83, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[83, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[83, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[83, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[83, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[83, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[83, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[84, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[85, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[85, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[85, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[85, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[85, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[85, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[85, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[85, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[86, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[86, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[86, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[86, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[86, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[87, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[87, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[87, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[88, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[88, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[88, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[88, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[88, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[88, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[88, "module-graphnet.utilities.config.model_config"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[88, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[88, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[88, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[89, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[89, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[89, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[89, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[89, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[89, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[89, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[90, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[90, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[90, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[90, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[90, "module-graphnet.utilities.config.training_config"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[90, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[90, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[90, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[91, "module-graphnet.utilities.decorators"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[92, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[92, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[92, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[92, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[92, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[93, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[93, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[93, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[93, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[93, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[94, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[94, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[94, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[94, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[94, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[94, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[94, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[94, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[94, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[94, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[94, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[94, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[94, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[94, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[94, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[95, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[95, "module-graphnet.utilities.maths"]]}})