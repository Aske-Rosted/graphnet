Search.setIndex({"docnames": ["about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.i3extractor", "api/graphnet.data.extractors.i3featureextractor", "api/graphnet.data.extractors.i3genericextractor", "api/graphnet.data.extractors.i3hybridrecoextractor", "api/graphnet.data.extractors.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.i3particleextractor", "api/graphnet.data.extractors.i3pisaextractor", "api/graphnet.data.extractors.i3quesoextractor", "api/graphnet.data.extractors.i3retroextractor", "api/graphnet.data.extractors.i3splinempeextractor", "api/graphnet.data.extractors.i3truthextractor", "api/graphnet.data.extractors.i3tumextractor", "api/graphnet.data.extractors.utilities", "api/graphnet.data.extractors.utilities.collections", "api/graphnet.data.extractors.utilities.frames", "api/graphnet.data.extractors.utilities.types", "api/graphnet.data.filters", "api/graphnet.data.parquet", "api/graphnet.data.parquet.parquet_dataconverter", "api/graphnet.data.pipeline", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.sqlite_dataconverter", "api/graphnet.data.sqlite.sqlite_utilities", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.deployment", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deployer", "api/graphnet.deployment.i3modules.graphnet_module", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.prometheus", "api/graphnet.models.gnn", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.utils", "api/graphnet.pisa", "api/graphnet.pisa.fitting", "api/graphnet.pisa.plotting", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute", "index", "install"], "filenames": ["about.md", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.i3extractor.rst", "api/graphnet.data.extractors.i3featureextractor.rst", "api/graphnet.data.extractors.i3genericextractor.rst", "api/graphnet.data.extractors.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.i3particleextractor.rst", "api/graphnet.data.extractors.i3pisaextractor.rst", "api/graphnet.data.extractors.i3quesoextractor.rst", "api/graphnet.data.extractors.i3retroextractor.rst", "api/graphnet.data.extractors.i3splinempeextractor.rst", "api/graphnet.data.extractors.i3truthextractor.rst", "api/graphnet.data.extractors.i3tumextractor.rst", "api/graphnet.data.extractors.utilities.rst", "api/graphnet.data.extractors.utilities.collections.rst", "api/graphnet.data.extractors.utilities.frames.rst", "api/graphnet.data.extractors.utilities.types.rst", "api/graphnet.data.filters.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.parquet_dataconverter.rst", "api/graphnet.data.pipeline.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.sqlite_dataconverter.rst", "api/graphnet.data.sqlite.sqlite_utilities.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deployer.rst", "api/graphnet.deployment.i3modules.graphnet_module.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.utils.rst", "api/graphnet.pisa.rst", "api/graphnet.pisa.fitting.rst", "api/graphnet.pisa.plotting.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute.md", "index.rst", "install.md"], "titles": ["About", "API", "constants", "data", "constants", "dataconverter", "dataloader", "dataset", "dataset", "parquet", "parquet_dataset", "sqlite", "sqlite_dataset", "extractors", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "types", "filters", "parquet", "parquet_dataconverter", "pipeline", "sqlite", "sqlite_dataconverter", "sqlite_utilities", "utilities", "parquet_to_sqlite", "random", "string_selection_resolver", "deployment", "i3modules", "deployer", "graphnet_module", "models", "coarsening", "components", "layers", "pool", "detector", "detector", "icecube", "prometheus", "gnn", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "standard_model", "task", "classification", "reconstruction", "task", "utils", "pisa", "fitting", "plotting", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contribute", "About", "Install"], "terms": {"graphnet": [0, 1, 2, 3, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 51, 52, 53, 69, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103], "i": [0, 1, 14, 16, 27, 28, 29, 30, 35, 36, 39, 40, 78, 80, 81, 82, 84, 86, 88, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103], "an": [0, 5, 29, 32, 35, 40, 82, 96, 98, 101, 102, 103], "open": [0, 101, 102], "sourc": [0, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 36, 38, 39, 40, 51, 52, 53, 69, 77, 78, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102], "python": [0, 1, 5, 13, 14, 16, 27, 29, 101, 102, 103], "framework": [0, 102], "aim": [0, 1, 101, 102], "provid": [0, 1, 82, 101, 102, 103], "high": [0, 102], "qualiti": [0, 102], "user": [0, 80, 102, 103], "friendli": [0, 102], "end": [0, 1, 5, 32, 35, 80, 102], "function": [0, 5, 29, 36, 39, 52, 53, 69, 77, 78, 82, 85, 90, 91, 92, 95, 96, 97, 99, 102], "perform": [0, 102], "reconstruct": [0, 1, 15, 17, 18, 22, 23, 25, 41, 45, 71, 102], "task": [0, 1, 45, 82, 101, 102], "neutrino": [0, 1, 77, 102], "telescop": [0, 1, 102], "us": [0, 1, 2, 4, 5, 14, 19, 24, 26, 27, 32, 35, 36, 37, 38, 40, 41, 51, 69, 77, 80, 81, 82, 84, 85, 86, 87, 90, 91, 92, 97, 98, 101, 102, 103], "graph": [0, 1, 45, 51, 81, 101, 102], "neural": [0, 1, 102], "network": [0, 1, 102], "gnn": [0, 1, 45, 102, 103], "make": [0, 5, 84, 90, 91, 101, 102, 103], "fast": [0, 102, 103], "easi": [0, 102], "train": [0, 1, 40, 41, 80, 81, 82, 84, 86, 90, 91, 93, 100, 102, 103], "complex": [0, 102], "model": [0, 1, 41, 51, 52, 53, 78, 79, 80, 82, 86, 88, 90, 91, 93, 100, 102, 103], "can": [0, 1, 14, 16, 19, 38, 77, 78, 84, 86, 88, 90, 91, 101, 102, 103], "event": [0, 1, 21, 36, 38, 40, 77, 82, 84, 90, 102], "state": [0, 95, 102], "art": [0, 102], "arbitrari": [0, 102], "detector": [0, 1, 24, 45, 52, 53, 102], "configur": [0, 1, 69, 77, 85, 87, 88, 90, 91, 93, 98, 102], "infer": [0, 1, 41, 102, 103], "time": [0, 4, 36, 98, 102, 103], "ar": [0, 1, 4, 5, 16, 29, 30, 32, 35, 38, 40, 77, 82, 84, 90, 91, 101, 102, 103], "order": [0, 27, 102], "magnitud": [0, 102], "faster": [0, 102], "than": [0, 98, 102], "tradit": [0, 102], "techniqu": [0, 102], "common": [0, 1, 82, 90, 91, 94, 97, 102], "ml": [0, 1, 102], "develop": [0, 1, 101, 102, 103], "physicist": [0, 1, 102], "wish": [0, 101, 102], "tool": [0, 1, 102], "research": [0, 102], "By": [0, 38, 102], "unit": [0, 5, 97, 101, 102], "both": [0, 16, 78, 102], "group": [0, 5, 32, 35, 102], "increas": [0, 80, 102], "longev": [0, 102], "usabl": [0, 102], "individu": [0, 5, 102], "code": [0, 24, 36, 90, 91, 102], "contribut": [0, 102, 103], "from": [0, 1, 13, 14, 16, 18, 19, 21, 27, 28, 29, 30, 35, 38, 69, 78, 80, 81, 82, 88, 89, 90, 91, 93, 98, 101, 102, 103], "build": [0, 1, 51, 69, 88, 90, 91, 102], "gener": [0, 5, 16, 30, 82, 102], "reusabl": [0, 102], "softwar": [0, 82, 102], "packag": [0, 1, 39, 92, 96, 97, 101, 102, 103], "base": [0, 4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 35, 38, 40, 51, 52, 53, 69, 77, 80, 81, 82, 84, 86, 88, 89, 90, 91, 93, 97, 98, 102], "engin": [0, 102], "best": [0, 80, 101, 102], "practic": [0, 101, 102], "lower": [0, 78, 102], "technic": [0, 102], "threshold": [0, 102], "most": [0, 1, 40, 102, 103], "scientif": [0, 1, 102], "problem": [0, 101, 102], "The": [0, 5, 27, 29, 35, 36, 77, 78, 80, 81, 82, 95, 102], "improv": [0, 1, 86, 102], "classif": [0, 1, 45, 71, 82, 102], "yield": [0, 77, 82, 102], "veri": [0, 40, 102], "accur": [0, 102], "e": [0, 1, 5, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 32, 35, 36, 40, 51, 52, 53, 69, 80, 81, 82, 84, 88, 98, 101, 102, 103], "g": [0, 1, 5, 24, 27, 29, 32, 35, 36, 40, 84, 98, 101, 102, 103], "low": [0, 102], "energi": [0, 4, 84, 102], "observ": [0, 102], "icecub": [0, 1, 15, 28, 29, 45, 50, 97, 102, 103], "here": [0, 101, 102, 103], "implement": [0, 1, 5, 14, 31, 32, 34, 35, 82, 101, 102], "wa": [0, 102], "appli": [0, 14, 92, 102], "oscil": [0, 76, 102], "lead": [0, 102], "signific": [0, 102], "angular": [0, 102], "rang": [0, 102], "relev": [0, 1, 29, 39, 96, 101, 102], "studi": [0, 102], "furthermor": [0, 102], "shown": [0, 102], "could": [0, 101, 102], "muon": [0, 18, 102], "v": [0, 102], "therebi": [0, 1, 90, 91, 102], "effici": [0, 102], "puriti": [0, 102], "sampl": [0, 40, 102], "analysi": [0, 102, 103], "similarli": [0, 29, 102], "ha": [0, 5, 29, 32, 35, 36, 82, 96, 102, 103], "great": [0, 102], "point": [0, 23, 81, 82, 102], "analys": [0, 41, 76, 102], "final": [0, 80, 90, 102], "millisecond": [0, 102], "allow": [0, 41, 80, 88, 93, 102, 103], "whole": [0, 102], "new": [0, 1, 35, 88, 93, 101, 102], "type": [0, 5, 13, 14, 26, 27, 28, 32, 35, 36, 38, 39, 40, 51, 52, 53, 69, 77, 78, 80, 82, 84, 86, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 101, 102], "cosmic": [0, 102], "alert": [0, 102], "which": [0, 14, 15, 24, 28, 40, 69, 77, 82, 86, 102, 103], "were": [0, 102], "previous": [0, 102], "unfeas": [0, 102], "possibl": [0, 27, 101, 102], "identifi": [0, 5, 24, 90, 91, 102], "10": [0, 52, 53, 86, 102], "tev": [0, 102], "monitor": [0, 102], "rate": [0, 80, 102], "direct": [0, 79, 81, 102], "real": [0, 102], "thi": [0, 3, 5, 14, 16, 29, 32, 35, 36, 39, 77, 78, 80, 82, 84, 88, 90, 91, 93, 98, 101, 102, 103], "enabl": [0, 3, 102], "first": [0, 80, 101, 102], "ever": [0, 102], "despit": [0, 102], "larg": [0, 82, 102], "background": [0, 102], "origin": [0, 77, 102], "compris": [0, 102], "number": [0, 5, 32, 35, 40, 80, 86, 102], "modul": [0, 3, 29, 41, 50, 69, 76, 79, 85, 87, 90, 91, 92, 93, 97, 102], "necessari": [0, 27, 101, 102], "workflow": [0, 102], "ingest": [0, 1, 3, 50, 102], "raw": [0, 102], "data": [0, 1, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 81, 86, 88, 90, 93, 97, 100, 102, 103], "domain": [0, 1, 3, 41, 102], "specif": [0, 1, 3, 5, 15, 29, 31, 32, 34, 35, 36, 41, 50, 51, 52, 53, 82, 101, 102, 103], "format": [0, 1, 3, 5, 27, 32, 35, 78, 90, 101, 102, 103], "deploi": [0, 1, 41, 102], "chain": [0, 1, 41, 102, 103], "illustr": [0, 101, 102], "figur": [0, 78, 102], "level": [0, 24, 30, 36, 98, 102, 103], "overview": [0, 102], "typic": [0, 27, 102], "convert": [0, 1, 3, 5, 27, 30, 32, 35, 38, 102, 103], "industri": [0, 3, 102], "standard": [0, 3, 4, 5, 30, 32, 35, 40, 52, 53, 86, 101, 102], "intermedi": [0, 1, 3, 5, 32, 35, 102, 103], "file": [0, 1, 3, 5, 14, 27, 30, 32, 35, 38, 39, 69, 77, 80, 82, 86, 87, 88, 89, 90, 91, 96, 98, 102, 103], "read": [0, 3, 27, 51, 102, 103], "simpl": [0, 102], "physic": [0, 1, 14, 28, 29, 41, 102], "orient": [0, 102], "compon": [0, 1, 45, 69, 102], "manag": [0, 14, 79, 102], "experi": [0, 1, 79, 102], "log": [0, 1, 79, 80, 82, 85, 102, 103], "deploy": [0, 1, 42, 100, 102], "modular": [0, 102], "subclass": [0, 102], "torch": [0, 69, 97, 102, 103], "nn": [0, 102], "mean": [0, 5, 32, 35, 82, 91, 102], "onli": [0, 1, 77, 84, 88, 91, 93, 97, 102, 103], "need": [0, 27, 69, 82, 95, 102, 103], "import": [0, 1, 36, 85, 102], "few": [0, 101, 102], "exist": [0, 35, 36, 81, 90, 102], "purpos": [0, 82, 102], "built": [0, 102], "them": [0, 1, 27, 77, 102, 103], "togeth": [0, 102], "form": [0, 88, 93, 102], "complet": [0, 102], "extend": [0, 1, 102], "suit": [0, 102], "through": [0, 82, 102], "layer": [0, 45, 47, 102], "connect": [0, 82, 102], "etc": [0, 82, 98, 102], "optimis": [0, 1, 102], "differ": [0, 14, 101, 102, 103], "track": [0, 14, 18, 101, 102], "These": [0, 101, 102], "prepar": [0, 82, 102], "satisfi": [0, 102], "o": [0, 102], "load": [0, 39, 69, 88, 90, 102], "requir": [0, 20, 36, 82, 90, 91, 93, 102, 103], "when": [0, 5, 27, 30, 32, 35, 36, 81, 98, 101, 102, 103], "batch": [0, 86, 102], "do": [0, 82, 90, 91, 101, 102, 103], "predict": [0, 19, 23, 25, 82, 102], "either": [0, 82, 102, 103], "contain": [0, 5, 27, 28, 32, 35, 69, 82, 84, 86, 102, 103], "imag": [0, 1, 101, 102, 103], "portabl": [0, 102], "depend": [0, 102, 103], "free": [0, 82, 102], "split": [0, 30, 102], "up": [0, 5, 32, 35, 101, 102, 103], "interfac": [0, 76, 90, 91, 102, 103], "block": [0, 1, 102], "pre": [0, 51, 81, 101, 102], "directli": [0, 14, 102], "while": [0, 16, 80, 102], "continu": [0, 82, 102], "expand": [0, 102], "": [0, 5, 14, 27, 35, 38, 51, 80, 84, 86, 90, 91, 98, 99, 102, 103], "capabl": [0, 102], "project": [0, 101, 102], "receiv": [0, 102], "fund": [0, 102], "european": [0, 102], "union": [0, 16, 27, 29, 90, 93, 96, 102], "horizon": [0, 102], "2020": [0, 102], "innov": [0, 102], "programm": [0, 102], "under": [0, 102], "mari": [0, 102], "sk\u0142odowska": [0, 102], "curi": [0, 102], "grant": [0, 82, 102], "agreement": [0, 101, 102], "No": [0, 102], "890778": [0, 102], "work": [0, 4, 28, 101, 102, 103], "rasmu": [0, 102], "\u00f8rs\u00f8e": [0, 102], "partli": [0, 102], "punch4nfdi": [0, 102], "consortium": [0, 102], "support": [0, 29, 101, 102, 103], "dfg": [0, 102], "nfdi": [0, 102], "39": [0, 102, 103], "1": [0, 5, 27, 32, 35, 40, 80, 82, 84, 90, 102, 103], "germani": [0, 102], "conveni": [1, 101, 103], "collabor": 1, "solv": [1, 101], "It": [1, 27, 36, 101], "leverag": 1, "advanc": 1, "machin": [1, 103], "learn": [1, 80, 103], "without": [1, 77, 82, 103], "have": [1, 5, 16, 32, 35, 36, 40, 101, 103], "expert": 1, "themselv": [1, 90, 91], "acceler": 1, "area": 1, "phyic": 1, "design": 1, "principl": 1, "all": [1, 5, 14, 16, 30, 32, 35, 36, 51, 69, 82, 88, 89, 90, 91, 92, 93, 98, 101, 103], "streamlin": 1, "process": [1, 5, 14, 51, 101, 103], "transform": [1, 84], "extens": [1, 96], "basic": 1, "across": [1, 2, 29, 37, 82, 85, 86, 87, 98], "variou": 1, "easili": 1, "architectur": 1, "main": [1, 101, 103], "featur": [1, 3, 4, 5, 15, 51, 90, 101], "i3": [1, 5, 14, 28, 29, 30, 32, 35, 39, 96, 103], "more": [1, 36, 39, 90, 91, 98], "index": [1, 5, 29, 36, 51, 80], "sqlite": [1, 3, 7, 35, 36, 38, 103], "suitabl": 1, "plug": 1, "plai": 1, "abstract": [1, 5, 51, 89], "awai": 1, "detail": [1, 80, 103], "expos": 1, "physicst": 1, "what": [1, 101], "i3modul": [1, 41], "includ": [1, 77, 82, 88, 101], "docker": 1, "run": [1, 38], "containeris": 1, "fashion": 1, "subpackag": [1, 3, 7, 13, 41, 45, 60, 85], "dataset": [1, 3, 18, 40, 86, 90], "extractor": [1, 3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 35], "parquet": [1, 3, 7, 32, 38, 52, 53, 103], "util": [1, 3, 13, 27, 28, 29, 36, 38, 39, 40, 45, 60, 79, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100], "constant": [1, 3, 100], "dataconvert": [1, 3, 32, 35], "dataload": [1, 3, 93], "filter": [1, 3, 98], "pipelin": [1, 3], "coarsen": [1, 45], "standard_model": [1, 45], "pisa": [1, 20, 77, 78, 97, 100, 103], "fit": [1, 76, 78, 82, 84, 93], "plot": [1, 76], "callback": [1, 79], "label": [1, 18, 21, 78, 79], "loss_funct": [1, 79], "weight_fit": [1, 79], "config": [1, 40, 77, 80, 82, 85, 86, 88, 89, 90, 91, 92, 93], "argpars": [1, 85], "decor": [1, 5, 85, 97], "deprecation_tool": [1, 85], "filesi": [1, 85], "math": [1, 85], "submodul": [1, 3, 7, 9, 11, 13, 26, 31, 34, 37, 42, 45, 47, 50, 54, 60, 61, 66, 71, 76, 79, 85, 87, 92], "global": [2, 4, 69], "i3extractor": [3, 5, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 35], "i3featureextractor": [3, 4, 13, 35], "i3genericextractor": [3, 13, 35], "i3hybridrecoextractor": [3, 13], "i3ntmuonlabelsextractor": [3, 13], "i3particleextractor": [3, 13], "i3pisaextractor": [3, 13], "i3quesoextractor": [3, 13], "i3retroextractor": [3, 13], "i3splinempeextractor": [3, 13], "i3truthextractor": [3, 4, 13], "i3tumextractor": [3, 13], "parquet_dataconvert": [3, 31], "sqlite_dataconvert": [3, 34], "sqlite_util": [3, 34], "parquet_to_sqlit": [3, 37], "random": [3, 37, 40, 90], "string_selection_resolv": [3, 37], "truth": [3, 4, 15, 24, 36, 84, 90], "fileset": [3, 5], "init_global_index": [3, 5], "cache_output_fil": [3, 5], "i3filt": [3, 5, 30, 32, 35], "nullspliti3filt": [3, 30], "i3filtermask": [3, 30], "class": [4, 5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 34, 35, 38, 40, 51, 52, 53, 69, 77, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 93, 98, 101], "object": [4, 5, 14, 16, 27, 29, 51, 52, 53, 69, 77, 80, 82, 86, 88, 90, 91, 93, 98], "namespac": [4, 69, 90, 91], "name": [4, 5, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 35, 36, 38, 51, 77, 81, 84, 86, 88, 90, 91, 92, 93, 98, 101, 103], "icecube86": [4, 50, 52], "dom_x": [4, 52], "dom_i": [4, 52], "dom_z": [4, 52], "dom_tim": 4, "charg": [4, 82], "rde": 4, "pmt_area": 4, "deepcor": [4, 15, 52], "upgrad": [4, 15, 52, 103], "string": [4, 5, 27, 32, 35, 40, 51, 52, 88], "pmt_number": 4, "dom_numb": 4, "pmt_dir_x": 4, "pmt_dir_i": 4, "pmt_dir_z": 4, "dom_typ": 4, "prometheu": [4, 45, 50], "sensor_pos_x": [4, 53], "sensor_pos_i": [4, 53], "sensor_pos_z": [4, 53], "t": [4, 29, 36, 78, 80, 82, 103], "kaggl": [4, 52], "x": [4, 5, 24, 32, 35, 78, 82, 84], "y": [4, 24, 78, 103], "z": [4, 5, 24, 32, 35, 103], "auxiliari": 4, "energy_track": 4, "energy_cascad": 4, "position_x": 4, "position_i": 4, "position_z": 4, "azimuth": [4, 81], "zenith": [4, 81], "pid": [4, 40, 90], "elast": 4, "sim_typ": 4, "interaction_typ": 4, "interaction_tim": 4, "inelast": 4, "stopped_muon": 4, "injection_energi": 4, "injection_typ": 4, "injection_interaction_typ": 4, "injection_zenith": 4, "injection_azimuth": 4, "injection_bjorkenx": 4, "injection_bjorkeni": 4, "injection_position_x": 4, "injection_position_i": 4, "injection_position_z": 4, "injection_column_depth": 4, "primary_lepton_1_typ": 4, "primary_hadron_1_typ": 4, "primary_lepton_1_position_x": 4, "primary_lepton_1_position_i": 4, "primary_lepton_1_position_z": 4, "primary_hadron_1_position_x": 4, "primary_hadron_1_position_i": 4, "primary_hadron_1_position_z": 4, "primary_lepton_1_direction_theta": 4, "primary_lepton_1_direction_phi": 4, "primary_hadron_1_direction_theta": 4, "primary_hadron_1_direction_phi": 4, "primary_lepton_1_energi": 4, "primary_hadron_1_energi": 4, "total_energi": 4, "i3_fil": [5, 14], "str": [5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 36, 38, 39, 40, 51, 52, 53, 69, 77, 80, 81, 84, 86, 88, 89, 90, 91, 92, 93, 95, 96, 98], "gcd_file": [5, 14], "paramet": [5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 36, 38, 39, 40, 51, 52, 53, 69, 77, 78, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99], "output_fil": [5, 32, 35], "global_index": 5, "avail": [5, 16, 97], "pool": [5, 45, 47], "worker": [5, 32, 35, 39, 86, 98], "return": [5, 14, 27, 28, 29, 32, 35, 36, 38, 39, 40, 51, 52, 53, 69, 77, 78, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99], "none": [5, 14, 16, 24, 28, 29, 30, 32, 35, 36, 38, 40, 69, 77, 80, 82, 84, 86, 88, 89, 90, 92, 96, 98], "synchron": 5, "list": [5, 14, 16, 24, 27, 29, 30, 32, 35, 36, 38, 39, 40, 51, 69, 78, 80, 84, 90, 92, 93, 96, 98], "process_method": 5, "cach": 5, "output": [5, 32, 35, 38, 77, 84, 90, 91, 103], "typevar": 5, "f": 5, "bound": [5, 78], "callabl": [5, 29, 51, 52, 53, 84, 88, 90, 91, 92, 97], "ani": [5, 27, 28, 29, 30, 32, 35, 51, 52, 53, 69, 78, 80, 82, 84, 86, 88, 89, 90, 91, 92, 93, 98, 103], "outdir": [5, 32, 35, 38, 77], "gcd_rescu": [5, 32, 35, 96], "nb_files_to_batch": [5, 32, 35], "sequential_batch_pattern": [5, 32, 35], "input_file_batch_pattern": [5, 32, 35], "index_column": [5, 32, 35, 36, 40, 77, 84, 90], "icetray_verbos": [5, 32, 35], "i3_filt": [5, 32, 35], "abc": [5, 14, 69, 81, 84, 89, 90, 91], "logger": [5, 14, 30, 38, 40, 69, 81, 84, 85, 98, 103], "construct": [5, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 35, 38, 40, 51, 52, 53, 69, 77, 80, 81, 82, 84, 86, 89, 90, 91, 98], "regular": [5, 29, 32, 35], "express": [5, 32, 35, 69, 82], "accord": [5, 32, 35], "match": [5, 32, 35, 84, 96, 99], "certain": [5, 32, 35, 38, 77], "pattern": [5, 32, 35], "wildcard": [5, 32, 35], "same": [5, 29, 32, 35, 36, 80, 92, 98], "input": [5, 32, 35, 52, 88, 93, 95], "replac": [5, 32, 35, 88, 90, 91, 93, 95], "period": [5, 32, 35], "special": [5, 16, 32, 35], "interpret": [5, 32, 35], "liter": [5, 32, 35], "charact": [5, 32, 35], "regex": [5, 32, 35], "For": [5, 29, 32, 35, 80], "instanc": [5, 14, 24, 29, 32, 35, 69, 77, 81, 89, 91, 103], "A": [5, 30, 32, 35, 77, 82, 84, 88, 90, 91, 93, 103], "_": [5, 32, 35], "0": [5, 32, 35, 40, 77, 78, 82, 90], "9": [5, 32, 35], "5": [5, 32, 35, 40, 86, 103], "zst": [5, 32, 35], "find": [5, 32, 35, 96], "whose": [5, 32, 35], "one": [5, 32, 35, 36, 90, 91, 96, 101, 103], "capit": [5, 32, 35], "letter": [5, 32, 35], "follow": [5, 32, 35, 82, 84, 101, 103], "underscor": [5, 32, 35], "five": [5, 32, 35], "upgrade_genie_step4_141020_a_000000": [5, 32, 35], "upgrade_genie_step4_141020_a_000001": [5, 32, 35], "upgrade_genie_step4_141020_a_000008": [5, 32, 35], "upgrade_genie_step4_141020_a_000009": [5, 32, 35], "would": [5, 32, 35, 101], "upgrade_genie_step4_141020_a_00000x": [5, 32, 35], "suffix": [5, 32, 35], "upgrade_genie_step4_141020_a_000010": [5, 32, 35], "separ": [5, 27, 32, 35, 80, 103], "upgrade_genie_step4_141020_a_00001x": [5, 32, 35], "int": [5, 18, 21, 30, 32, 35, 40, 77, 80, 82, 84, 86, 90, 93, 98], "properti": [5, 14, 19, 29, 51, 81, 89, 98], "file_suffix": [5, 32, 35], "execut": [5, 36], "method": [5, 14, 26, 27, 28, 29, 32, 35, 51, 82, 84], "set": [5, 16, 101], "inherit": [5, 14, 29, 51, 82, 98], "path": [5, 36, 39, 69, 77, 78, 80, 86, 88, 89, 90, 96, 103], "correspond": [5, 27, 29, 35, 39, 84, 88, 90, 91, 93, 96, 103], "gcd": [5, 14, 28, 39, 96], "save_data": [5, 32, 35], "save": [5, 14, 27, 32, 35, 36, 69, 77, 80, 82, 84, 88, 89, 90, 91, 103], "ordereddict": [5, 32, 35], "extract": [5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 35, 38, 39], "merge_fil": [5, 32, 35], "input_fil": [5, 32, 35], "merg": [5, 32, 35, 82, 103], "result": [5, 32, 35, 80, 82, 92, 103], "option": [5, 24, 32, 35, 69, 77, 78, 80, 84, 85, 86, 88, 90, 96, 103], "default": [5, 16, 24, 27, 32, 35, 36, 38, 69, 77, 78, 80, 81, 82, 84, 86, 88, 90, 96], "current": [5, 32, 35, 40, 80, 101, 103], "rais": [5, 16, 32, 69, 88, 93], "notimplementederror": [5, 32], "If": [5, 16, 30, 32, 35, 69, 77, 80, 84, 101, 103], "been": [5, 32, 82, 101], "backend": [5, 32, 35], "question": 5, "get_map_funct": 5, "nb_file": 5, "map": [5, 15, 16, 35, 36, 52, 53, 88, 90, 91, 93], "pure": [5, 13, 14, 16, 29], "multiprocess": [5, 103], "tupl": [5, 28, 29, 77, 78, 86, 95], "parquet_dataset": [7, 9], "sqlite_dataset": [7, 11], "collect": [13, 14, 26, 82, 99], "i3fram": [13, 14, 16, 28, 29], "frame": [13, 14, 16, 26, 29, 30, 35], "i3extractorcollect": [13, 14], "i3featureextractoricecube86": [13, 15], "i3featureextractoricecubedeepcor": [13, 15], "i3featureextractoricecubeupgrad": [13, 15], "i3pulsenoisetruthflagicecubeupgrad": [13, 15], "i3galacticplanehybridrecoextractor": [13, 17], "i3ntmuonlabelextractor": [13, 18], "i3splinempeicextractor": [13, 23], "inform": [14, 16, 24, 78], "should": [14, 27, 40, 82, 88, 90, 91, 93, 101, 103], "__call__": 14, "icetrai": [14, 28, 29, 97], "keep": 14, "proven": 14, "tabl": [14, 35, 36, 51, 77, 84], "set_fil": 14, "store": [14, 36, 77, 81], "refer": [14, 53, 90], "being": 14, "get": [14, 28, 51, 80, 103], "multipl": [14, 80, 90, 98], "treat": 14, "singl": [14, 81, 90, 91], "pulsemap": [15, 35, 90], "puls": [15, 16, 28, 29, 35, 36], "seri": [15, 16, 28, 29, 36], "86": [15, 52], "nois": [15, 28], "flag": 15, "ad": [15, 77], "kei": [16, 27, 28, 29, 35, 36, 81, 90, 91], "exclude_kei": 16, "dynam": 16, "pars": [16, 78, 85, 86, 87, 88, 93], "call": [16, 29, 35, 77, 80, 84, 98], "tri": [16, 29], "automat": [16, 82, 101], "cast": [16, 29], "done": [16, 98, 101], "recurs": [16, 29, 92, 96], "each": [16, 27, 29, 36, 38, 39, 52, 53, 77, 78, 80, 96], "look": [16, 103], "member": [16, 29, 90, 91, 98], "variabl": [16, 29, 84, 98], "signatur": [16, 29], "similar": [16, 29, 103], "dict": [16, 27, 29, 35, 51, 52, 53, 69, 77, 78, 80, 86, 88, 90, 91, 92, 93, 95], "handl": [16, 82, 86, 95, 98], "hand": 16, "case": [16, 103], "per": [16, 36, 82, 84], "mc": [16, 35, 36], "tree": [16, 35], "trigger": 16, "exclud": [16, 38, 103], "valueerror": [16, 69], "hybrid": 17, "galatict": 17, "plane": [17, 82], "tum": [18, 25], "dnn": [18, 25], "padding_valu": [18, 21], "northeren": 18, "i3particl": 19, "other": [19, 36, 82, 101], "algorithm": 19, "comparison": [19, 82], "quantiti": 20, "select": [21, 40, 84, 90, 101], "queso": 21, "retro": 22, "splinemp": 23, "border": 24, "mctree": [24, 28], "ndarrai": [24, 84], "arrai": [24, 27], "boundari": 24, "volum": 24, "coordin": [24, 51], "particl": [24, 36, 81], "start": [24, 101, 103], "stop": [24, 80, 86], "within": 24, "hard": 24, "i3mctre": 24, "valu": [24, 27, 35, 36, 78, 81, 82, 86, 88], "flatten_nested_dictionari": [26, 27], "serialis": [26, 27], "transpose_list_of_dict": [26, 27], "frame_is_montecarlo": [26, 28], "frame_is_nois": [26, 28], "get_om_keys_and_pulseseri": [26, 28], "is_boost_enum": [26, 29], "is_boost_class": [26, 29], "is_icecube_class": [26, 29], "is_typ": [26, 29], "is_method": [26, 29], "break_cyclic_recurs": [26, 29], "get_member_vari": [26, 29], "cast_object_to_pure_python": [26, 29], "cast_pulse_series_to_pure_python": [26, 29], "manipul": 27, "obj": [27, 29, 92], "parent_kei": 27, "flatten": 27, "nest": 27, "dictionari": [27, 28, 29, 35, 77, 78, 88, 90, 91, 93], "non": [27, 29, 35, 36, 82], "exampl": [27, 40, 82, 90, 91, 103], "d": [27, 101], "b": 27, "c": [27, 82, 103], "2": [27, 77, 78, 82, 90, 103], "a__b": 27, "applic": 27, "combin": [27, 90], "parent": 27, "__": [27, 29], "concaten": 27, "nester": 27, "json": [27, 90], "therefor": 27, "we": [27, 29, 40, 101, 103], "element": [27, 29, 92], "outer": 27, "abl": [27, 103], "de": 27, "transpos": 27, "check": [28, 29, 30, 35, 36, 86, 96, 97, 101, 103], "whether": [28, 29, 35, 36, 69, 82, 92, 96, 97], "mont": 28, "carlo": 28, "simul": 28, "bool": [28, 29, 30, 35, 36, 40, 69, 77, 80, 82, 84, 86, 92, 95, 96, 97, 98], "pulseseri": 28, "calibr": [28, 29], "indici": [28, 40, 82], "gcd_dict": [28, 29], "p": [28, 35, 82], "om": [28, 29], "dataclass": 28, "i3calibr": 28, "indicesfor": 28, "boost": 29, "enum": 29, "fn": [29, 88, 92], "ensur": [29, 39, 82, 98, 101, 103], "isn": 29, "return_discard": 29, "valid": [29, 40, 80, 82, 86, 88, 93], "ignor": 29, "mangl": 29, "take": [29, 35, 101], "mainli": 29, "cannot": [29, 88, 93], "trivial": 29, "doe": [29, 91], "try": 29, "length": [29, 80], "equival": 29, "its": 29, "like": [29, 82, 99, 101], "otherwis": [29, 82], "itself": 29, "deem": 29, "wai": [29, 40, 101, 103], "represent": 29, "optic": 29, "found": [29, 82], "class_nam": [30, 91, 98], "log_fold": [30, 98], "kwarg": [30, 51, 52, 53, 69, 80, 82, 84, 88, 90, 91, 98], "skip": 30, "null": [30, 36], "filter_nam": 30, "filter_ani": 30, "filtermask": 30, "initi": 30, "arg": [30, 51, 52, 53, 69, 82, 86, 88, 98], "true": [30, 35, 36, 77, 80, 82, 84, 90, 91, 93, 96], "kept": 30, "present": [30, 86, 96, 97], "fals": [30, 69, 77, 80, 82, 84, 90], "parquetdataconvert": [31, 32], "sqlitedataconvert": [34, 35, 103], "construct_datafram": [34, 35], "is_pulse_map": [34, 35], "is_mc_tre": [34, 35], "database_exist": [34, 36], "database_table_exist": [34, 36], "run_sql_cod": [34, 36], "save_to_sql": [34, 36], "attach_index": [34, 36], "create_t": [34, 36], "create_table_and_save_to_sql": [34, 36], "db": 35, "databas": [35, 36, 38, 77, 84, 103], "max_table_s": 35, "maximum": [35, 86], "row": [35, 36], "given": [35, 84, 86], "exce": 35, "limit": [35, 82], "creat": [35, 36, 88, 89, 93, 101, 103], "any_pulsemap_is_non_empti": 35, "data_dict": 35, "empti": 35, "retriev": [35, 51], "splitinicepuls": 35, "least": [35, 101, 103], "becaus": [35, 39], "instead": [35, 82], "alwai": 35, "panda": [35, 40, 84], "datafram": [35, 36, 40, 51, 77, 84], "table_nam": [35, 36], "database_path": [36, 77, 84], "df": 36, "must": [36, 80, 84, 101], "alreadi": [36, 103], "attach": 36, "queri": [36, 40], "column": [36, 51, 77, 84], "default_typ": 36, "integer_primary_kei": 36, "event_no": [36, 40, 84, 90], "NOT": [36, 82], "integ": [36, 82], "primari": 36, "Such": 36, "uniqu": [36, 38, 90], "appropri": 36, "expect": [36, 40], "doesn": 36, "parquettosqliteconvert": [37, 38], "pairwise_shuffl": [37, 39], "stringselectionresolv": [37, 40], "parquet_path": 38, "mc_truth_tabl": 38, "excluded_field": 38, "assign": [38, 101], "id": [38, 51], "everi": [38, 103], "field": [38, 78, 81, 88, 90, 91, 93, 95], "One": [38, 78], "choos": 38, "argument": [38, 80, 84, 86, 88, 90, 91, 93], "exclude_field": 38, "database_nam": 38, "convers": [38, 103], "directori": [38, 77, 80, 96], "rng": 39, "relat": [39, 96], "i3_list": [39, 96], "gcd_list": [39, 96], "shuffl": 39, "correpond": 39, "handi": 39, "even": 39, "files_list": 39, "gcd_shuffl": 39, "i3_shuffl": 39, "resolv": 40, "indic": [40, 80, 86, 101], "seed": [40, 90], "use_cach": 40, "datasetconfig": [40, 87, 90], "flexibl": 40, "defin": [40, 88, 90, 91, 93], "below": [40, 78, 84, 101, 103], "show": [40, 80], "involv": 40, "cover": 40, "yml": [40, 86, 90, 91], "test": [40, 90, 97, 101], "50000": [40, 90], "ab": [40, 82, 90], "12": [40, 90], "14": [40, 90], "16": [40, 90], "13": [40, 103], "10000": 40, "compat": 40, "syntax": [40, 82], "mai": [40, 103], "also": [40, 90], "specifi": [40, 78, 80, 103], "fix": 40, "randomli": [40, 91], "20": [40, 98], "graphnet_modul": [41, 42], "convnet": [45, 54], "dynedg": [45, 54], "dynedge_jinst": [45, 54], "dynedge_kaggle_tito": [45, 54], "edg": [45, 60], "node": [45, 60], "graph_definit": [45, 60, 90], "standardis": 50, "icecubekaggl": [50, 52], "icecubedeepcor": [50, 52], "icecubeupgrad": [50, 52], "orca150": [50, 53], "ins": 51, "feature_map": [51, 52, 53], "assum": 51, "forward": [51, 82], "input_featur": 51, "input_feature_nam": 51, "adjac": 51, "tensor": [51, 82, 95, 99], "geometry_t": [51, 52, 53], "public": [51, 84], "geometri": 51, "string_index_nam": 51, "sensor_position_nam": 51, "xyz": [51, 52, 53], "sensor_index_nam": 51, "sensor": 51, "geometry_table_path": [52, 53], "home": [52, 53, 86, 103], "runner": [52, 53, 86], "local": [52, 53, 86], "lib": [52, 53, 86, 103], "python3": [52, 53, 86], "string_id_column": [52, 53], "sensor_id_column": [52, 53], "sensor_id": [52, 53], "dimens": [52, 53, 82], "competit": 52, "icecube_upgrad": 52, "prototyp": 53, "orca_150": 53, "sensor_string_id": 53, "minkowski": [60, 61], "lightningmodul": [69, 80, 98], "entir": 69, "classmethod": [69, 82, 88, 89], "save_state_dict": 69, "state_dict": [69, 95], "load_state_dict": 69, "karg": 69, "from_config": [69, 89, 90, 91], "trust": 69, "load_modul": 69, "modelconfig": [69, 87, 90, 91], "enough": 69, "eval": [69, 103], "lambda": 69, "definit": [69, 101], "consequ": 69, "config_updat": [76, 77], "weightfitt": [76, 77, 79, 84], "contourfitt": [76, 77], "read_entri": [76, 78], "plot_2d_contour": [76, 78], "plot_1d_contour": [76, 78], "contour": [77, 78], "config_path": 77, "new_config_path": 77, "dummy_sect": 77, "updat": [77, 80], "temp": 77, "dummi": 77, "section": 77, "header": 77, "configupdat": 77, "programat": 77, "truth_tabl": [77, 84, 90], "statistical_fit": 77, "weight": [77, 82, 84, 91, 103], "fit_weight": [77, 84], "config_outdir": 77, "weight_nam": [77, 84], "pisa_config_dict": 77, "add_to_databas": [77, 84], "flux": 77, "self": [77, 88, 93], "_database_path": 77, "statist": 77, "effect": [77, 80, 101], "account": 77, "systemat": 77, "hypersurfac": 77, "chang": [77, 82, 101], "assumpt": 77, "regard": 77, "two": [77, 80, 82], "pipeline_path": 77, "post_fix": 77, "model_nam": 77, "include_retro": 77, "fit_1d_contour": 77, "run_nam": 77, "config_dict": 77, "grid_siz": 77, "n_worker": 77, "theta23_minmax": 77, "36": 77, "54": 77, "dm31_minmax": 77, "3": [77, 78, 82, 101, 103], "7": 77, "1d": [77, 78], "float": [77, 78, 80, 82, 90], "fit_2d_contour": 77, "2d": [77, 78, 82], "entri": [78, 86], "content": 78, "contour_data": 78, "xlim": 78, "4": 78, "6": 78, "ylim": 78, "0023799999999999997": 78, "0025499999999999997": 78, "chi2_critical_valu": 78, "width": 78, "height": 78, "path_to_pisa_fit_result": 78, "name_of_my_model_in_fit": 78, "legend": 78, "color": 78, "linestyl": 78, "style": [78, 101], "line": [78, 80, 86], "upper": 78, "axi": 78, "605": 78, "critic": [78, 98], "chi2": 78, "90": 78, "cl": 78, "note": [78, 91], "right": [78, 82], "176": 78, "inch": 78, "388": 78, "706": 78, "abov": [78, 82, 84, 103], "352": 78, "piecewiselinearlr": [79, 80], "progressbar": [79, 80], "graphnetearlystop": [79, 80], "lossfunct": [79, 82], "mseloss": [79, 82], "rmseloss": [79, 82], "logcoshloss": [79, 82], "crossentropyloss": [79, 82], "binarycrossentropyloss": [79, 82], "logcmk": [79, 82], "vonmisesfisherloss": [79, 82], "vonmisesfisher2dloss": [79, 82], "euclideandistanceloss": [79, 82], "vonmisesfisher3dloss": [79, 82], "uniform": [79, 84], "bjoernlow": [79, 84], "dure": 80, "optim": 80, "mileston": 80, "factor": 80, "last_epoch": 80, "verbos": 80, "_lrschedul": 80, "interpol": 80, "linearli": 80, "between": [80, 82, 90, 91], "denot": 80, "step": 80, "multipli": 80, "closest": 80, "befor": 80, "vice": 80, "versa": 80, "after": [80, 86, 90], "last": 80, "wrap": [80, 90, 91], "epoch": [80, 86], "print": [80, 98], "messag": [80, 98], "stdout": 80, "get_lr": 80, "refresh_r": 80, "process_posit": 80, "tqdmprogressbar": 80, "custom": 80, "progress": 80, "bar": 80, "customis": 80, "pytorch": [80, 103], "lightn": 80, "init_validation_tqdm": 80, "overrid": 80, "init_predict_tqdm": 80, "init_test_tqdm": 80, "init_train_tqdm": 80, "get_metr": 80, "trainer": 80, "version": [80, 101, 103], "on_train_epoch_start": 80, "previou": 80, "see": [80, 101, 103], "loss": [80, 82, 86], "metric": 80, "behaviour": 80, "overwrit": 80, "on_train_epoch_end": 80, "don": [80, 103], "duplciat": 80, "save_dir": 80, "earlystop": 80, "earli": [80, 86], "keyword": [80, 88, 93], "pass": [80, 82, 84, 101], "pytorch_lightn": [80, 98], "setup": [80, 103], "graphnet_model": 80, "stage": 80, "pl": 80, "on_validation_end": 80, "on_fit_end": 80, "runtim": [81, 103], "produc": [81, 84], "where": 81, "That": 81, "azimuth_kei": 81, "zenith_kei": 81, "access": [81, 103], "azimiuth": 81, "angl": 81, "calcul": [81, 82], "target": [82, 93], "return_el": 82, "shape": 82, "n": 82, "elementwis": 82, "term": 82, "altern": [82, 101], "averag": 82, "scalar": 82, "squar": 82, "error": [82, 98, 101], "root": [82, 103], "cosh": 82, "act": 82, "small": 82, "comput": [82, 88, 90, 91, 93], "cross": 82, "entropi": 82, "num_class": 82, "matrix": 82, "logit": 82, "softmax": 82, "ed": 82, "probabl": 82, "binari": 82, "vector": 82, "mit": 82, "licens": 82, "copyright": 82, "2019": 82, "max": [82, 86], "ryabinin": 82, "permiss": 82, "herebi": 82, "person": 82, "obtain": 82, "copi": 82, "associ": 82, "document": 82, "deal": 82, "restrict": 82, "modifi": 82, "publish": 82, "distribut": [82, 84], "sublicens": 82, "sell": 82, "permit": 82, "whom": 82, "furnish": 82, "so": [82, 103], "subject": 82, "condit": 82, "notic": 82, "shall": 82, "substanti": 82, "portion": 82, "THE": 82, "AS": 82, "warranti": 82, "OF": 82, "kind": 82, "OR": 82, "impli": 82, "BUT": 82, "TO": 82, "merchant": 82, "FOR": 82, "particular": [82, 101], "AND": 82, "noninfring": 82, "IN": 82, "NO": 82, "author": 82, "holder": 82, "BE": 82, "liabl": 82, "claim": 82, "damag": 82, "liabil": 82, "action": 82, "contract": 82, "tort": 82, "aris": 82, "out": [82, 98, 101, 103], "WITH": 82, "_____________________": 82, "http": [82, 101], "github": [82, 103], "com": [82, 103], "mryab": 82, "vmf_loss": 82, "blob": 82, "master": 82, "py": [82, 103], "bessel": 82, "exponenti": 82, "scale": 82, "ditto": 82, "iv": 82, "1812": 82, "04616": 82, "spite": 82, "suggest": 82, "sec": 82, "8": [82, 101, 103], "paper": 82, "exact": 82, "m": 82, "correct": 82, "static": [82, 101], "ctx": 82, "kappa": 82, "backward": 82, "grad_output": 82, "von": 82, "mise": 82, "fisher": 82, "log_cmk_exact": 82, "c_": 82, "k": 82, "exactli": [82, 98], "log_cmk_approx": 82, "approx": 82, "arxiv": 82, "org": [82, 103], "addit": [82, 84], "minu": 82, "sign": 82, "log_cmk": 82, "kappa_switch": 82, "sinc": 82, "diverg": 82, "700": 82, "float64": 82, "precis": 82, "unaccur": 82, "switch": 82, "three": 82, "3d": 82, "uniformweightfitt": 84, "bin": 84, "privat": 84, "_fit_weight": 84, "sql": 84, "desir": [84, 96], "space": 84, "np": 84, "log10": 84, "happen": 84, "x_low": 84, "wherea": 84, "curv": 84, "base_config": [85, 87], "dataset_config": [85, 87], "model_config": [85, 87, 88, 90, 93], "training_config": [85, 87], "argumentpars": [85, 86], "rename_state_dict_entri": [85, 95], "is_gcd_fil": [85, 96], "is_i3_fil": [85, 96], "has_extens": [85, 96], "find_i3_fil": [85, 96], "has_icecube_packag": [85, 97], "has_torch_packag": [85, 97], "has_pisa_packag": [85, 97], "requires_icecub": [85, 97], "repeatfilt": [85, 98], "eps_lik": [85, 99], "consist": [86, 98, 101], "cli": 86, "pop_default": 86, "remov": 86, "usag": 86, "descript": 86, "command": [86, 103], "standard_argu": 86, "size": 86, "128": 86, "help": [86, 101], "training_example_data_sqlit": 86, "patienc": 86, "gpu": [86, 103], "narg": 86, "50": 86, "example_energy_reconstruction_model": 86, "num": 86, "fetch": 86, "with_standard_argu": 86, "add": [86, 95, 101, 103], "overwritten": [86, 88], "baseconfig": [87, 88, 89, 90, 91, 93], "get_all_argument_valu": [87, 88], "save_dataset_config": [87, 90], "datasetconfigsavermeta": [87, 90], "datasetconfigsaverabcmeta": [87, 90], "save_model_config": [87, 91], "modelconfigsavermeta": [87, 91], "modelconfigsaverabc": [87, 91], "traverse_and_appli": [87, 92], "list_all_submodul": [87, 92], "get_all_grapnet_class": [87, 92], "is_graphnet_modul": [87, 92], "is_graphnet_class": [87, 92], "get_graphnet_class": [87, 92], "trainingconfig": [87, 93], "basemodel": [88, 90, 91], "validationerror": [88, 93], "pydantic_cor": [88, 93], "explicitli": [88, 93], "posit": [88, 93], "dump": [88, 90, 91], "yaml": [88, 89], "as_dict": [88, 90, 91], "repres": [88, 90, 91], "model_computed_field": [88, 90, 91, 93], "classvar": [88, 90, 91, 93], "computedfieldinfo": [88, 90, 91, 93], "configdict": [88, 90, 91, 93], "conform": [88, 90, 91, 93], "pydant": [88, 90, 91, 93], "model_field": [88, 90, 91, 93], "fieldinfo": [88, 90, 91, 93], "metadata": [88, 90, 91, 93], "about": [88, 90, 91, 93], "__fields__": [88, 90, 91, 93], "v1": [88, 90, 91, 93, 103], "re": [89, 103], "save_config": 89, "node_truth": 90, "node_truth_t": 90, "string_select": 90, "loss_weight_t": 90, "loss_weight_column": 90, "loss_weight_default_valu": 90, "dataconfig": 90, "transpar": [90, 91, 101], "reproduc": [90, 91], "In": [90, 91, 103], "session": [90, 91], "anoth": [90, 91], "you": [90, 91, 101, 103], "ensembledataset": 90, "still": 90, "csv": 90, "train_select": 90, "test_select": 90, "unambigu": [90, 91], "annot": [90, 91, 93], "nonetyp": 90, "init_fn": [90, 91], "__init__": [90, 91, 103], "metaclass": [90, 91], "abcmeta": [90, 91], "datasetconfigsav": 90, "trainabl": 91, "hyperparamet": 91, "instanti": 91, "initialis": 91, "thu": 91, "modelconfigsav": 91, "fn_kwarg": 92, "structur": 92, "moduletyp": 92, "grapnet": 92, "lookup": 92, "early_stopping_pati": 93, "deprec": 95, "transit": 95, "old_phras": 95, "new_phras": 95, "deepcopi": 95, "who": 95, "renam": 95, "phrase": 95, "place": [95, 101], "system": [96, 103], "filenam": 96, "dir": 96, "search": 96, "test_funct": 97, "repeat": 98, "nb_repeats_allow": 98, "record": 98, "logrecord": 98, "clear": 98, "intuit": 98, "composit": 98, "rather": 98, "loggeradapt": 98, "chosen": 98, "avoid": [98, 101], "clash": 98, "setlevel": 98, "deleg": 98, "msg": 98, "warn": 98, "info": [98, 103], "debug": 98, "warning_onc": 98, "onc": 98, "handler": 98, "file_handl": 98, "filehandl": 98, "stream_handl": 98, "streamhandl": 98, "assort": 99, "ep": 99, "dtype": 99, "api": 100, "To": [101, 103], "sure": [101, 103], "smooth": 101, "guidelin": 101, "guid": 101, "encourag": 101, "contributor": 101, "discuss": 101, "bug": 101, "anyth": 101, "describ": 101, "yourself": 101, "ownership": 101, "activ": [101, 103], "prioriti": 101, "situat": 101, "lot": 101, "effort": 101, "go": 101, "turn": 101, "outsid": 101, "scope": 101, "solut": 101, "better": 101, "fork": 101, "repo": 101, "dedic": 101, "branch": [101, 103], "your": [101, 103], "repositori": 101, "graphdefinit": 101, "euclidean": 101, "own": [101, 103], "team": 101, "accept": 101, "autom": 101, "review": 101, "pep8": 101, "docstr": 101, "googl": 101, "hint": 101, "clean": [101, 103], "adher": 101, "pep": 101, "pylint": 101, "flake8": 101, "black": 101, "well": 101, "recommend": [101, 103], "mypi": 101, "pydocstyl": 101, "docformatt": 101, "commit": 101, "hook": 101, "instal": 101, "come": 101, "tag": [101, 103], "pip": [101, 103], "Then": 101, "everytim": 101, "pep257": 101, "concept": 101, "ljvmiranda921": 101, "io": 101, "notebook": 101, "2018": 101, "06": 101, "21": 101, "precommit": 101, "environ": 103, "virtual": 103, "anaconda": 103, "prove": 103, "instruct": 103, "want": 103, "part": 103, "achiev": 103, "bash": 103, "shell": 103, "cvmf": 103, "opensciencegrid": 103, "py3": 103, "v4": 103, "sh": 103, "rhel_7_x86_64": 103, "metaproject": 103, "env": 103, "alia": 103, "script": 103, "With": 103, "now": 103, "light": 103, "extra": 103, "geometr": 103, "just": 103, "won": 103, "later": 103, "r": 103, "torch_cpu": 103, "txt": 103, "cpu": 103, "torch_gpu": 103, "prefer": 103, "unix": 103, "git": 103, "clone": 103, "usernam": 103, "cd": 103, "conda": 103, "gcc_linux": 103, "64": 103, "gxx_linux": 103, "libgcc": 103, "cudatoolkit": 103, "11": 103, "forg": 103, "box": 103, "compil": 103, "gcc": 103, "date": 103, "possibli": 103, "cuda": 103, "toolkit": 103, "recent": 103, "omit": 103, "newer": 103, "export": 103, "ld_library_path": 103, "anaconda3": 103, "miniconda3": 103, "bashrc": 103, "librari": 103, "intend": 103, "consid": 103, "rm": 103, "asogaard": 103, "latest": 103, "dc423315742c": 103, "01_icetrai": 103, "01_convert_i3_fil": 103, "2023": 103, "01": 103, "24": 103, "41": 103, "27": 103, "write": 103, "graphnet_20230124": 103, "134127": 103, "46": 103, "convert_i3_fil": 103, "ic86": 103, "thread": 103, "100": 103, "00": 103, "79": 103, "42": 103, "26": 103, "413": 103, "88it": 103, "specialis": 103, "ones": 103, "push": 103, "vx": 103}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [3, 0, 0, "-", "data"], [41, 0, 0, "-", "deployment"], [76, 0, 0, "-", "pisa"], [79, 0, 0, "-", "training"], [85, 0, 0, "-", "utilities"]], "graphnet.data": [[4, 0, 0, "-", "constants"], [5, 0, 0, "-", "dataconverter"], [13, 0, 0, "-", "extractors"], [30, 0, 0, "-", "filters"], [31, 0, 0, "-", "parquet"], [34, 0, 0, "-", "sqlite"], [37, 0, 0, "-", "utilities"]], "graphnet.data.constants": [[4, 1, 1, "", "FEATURES"], [4, 1, 1, "", "TRUTH"]], "graphnet.data.constants.FEATURES": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.constants.TRUTH": [[4, 2, 1, "", "DEEPCORE"], [4, 2, 1, "", "ICECUBE86"], [4, 2, 1, "", "KAGGLE"], [4, 2, 1, "", "PROMETHEUS"], [4, 2, 1, "", "UPGRADE"]], "graphnet.data.dataconverter": [[5, 1, 1, "", "DataConverter"], [5, 1, 1, "", "FileSet"], [5, 5, 1, "", "cache_output_files"], [5, 5, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[5, 3, 1, "", "execute"], [5, 4, 1, "", "file_suffix"], [5, 3, 1, "", "get_map_function"], [5, 3, 1, "", "merge_files"], [5, 3, 1, "", "save_data"]], "graphnet.data.dataconverter.FileSet": [[5, 2, 1, "", "gcd_file"], [5, 2, 1, "", "i3_file"]], "graphnet.data.extractors": [[14, 0, 0, "-", "i3extractor"], [15, 0, 0, "-", "i3featureextractor"], [16, 0, 0, "-", "i3genericextractor"], [17, 0, 0, "-", "i3hybridrecoextractor"], [18, 0, 0, "-", "i3ntmuonlabelsextractor"], [19, 0, 0, "-", "i3particleextractor"], [20, 0, 0, "-", "i3pisaextractor"], [21, 0, 0, "-", "i3quesoextractor"], [22, 0, 0, "-", "i3retroextractor"], [23, 0, 0, "-", "i3splinempeextractor"], [24, 0, 0, "-", "i3truthextractor"], [25, 0, 0, "-", "i3tumextractor"], [26, 0, 0, "-", "utilities"]], "graphnet.data.extractors.i3extractor": [[14, 1, 1, "", "I3Extractor"], [14, 1, 1, "", "I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor.I3Extractor": [[14, 4, 1, "", "name"], [14, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3extractor.I3ExtractorCollection": [[14, 3, 1, "", "set_files"]], "graphnet.data.extractors.i3featureextractor": [[15, 1, 1, "", "I3FeatureExtractor"], [15, 1, 1, "", "I3FeatureExtractorIceCube86"], [15, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [15, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [15, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3genericextractor": [[16, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[17, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[18, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3particleextractor": [[19, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[20, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[21, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.i3retroextractor": [[22, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[23, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3truthextractor": [[24, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.i3tumextractor": [[25, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.utilities": [[27, 0, 0, "-", "collections"], [28, 0, 0, "-", "frames"], [29, 0, 0, "-", "types"]], "graphnet.data.extractors.utilities.collections": [[27, 5, 1, "", "flatten_nested_dictionary"], [27, 5, 1, "", "serialise"], [27, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.utilities.frames": [[28, 5, 1, "", "frame_is_montecarlo"], [28, 5, 1, "", "frame_is_noise"], [28, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.types": [[29, 5, 1, "", "break_cyclic_recursion"], [29, 5, 1, "", "cast_object_to_pure_python"], [29, 5, 1, "", "cast_pulse_series_to_pure_python"], [29, 5, 1, "", "get_member_variables"], [29, 5, 1, "", "is_boost_class"], [29, 5, 1, "", "is_boost_enum"], [29, 5, 1, "", "is_icecube_class"], [29, 5, 1, "", "is_method"], [29, 5, 1, "", "is_type"]], "graphnet.data.filters": [[30, 1, 1, "", "I3Filter"], [30, 1, 1, "", "I3FilterMask"], [30, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.parquet": [[32, 0, 0, "-", "parquet_dataconverter"]], "graphnet.data.parquet.parquet_dataconverter": [[32, 1, 1, "", "ParquetDataConverter"]], "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter": [[32, 2, 1, "", "file_suffix"], [32, 3, 1, "", "merge_files"], [32, 3, 1, "", "save_data"]], "graphnet.data.sqlite": [[35, 0, 0, "-", "sqlite_dataconverter"], [36, 0, 0, "-", "sqlite_utilities"]], "graphnet.data.sqlite.sqlite_dataconverter": [[35, 1, 1, "", "SQLiteDataConverter"], [35, 5, 1, "", "construct_dataframe"], [35, 5, 1, "", "is_mc_tree"], [35, 5, 1, "", "is_pulse_map"]], "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter": [[35, 3, 1, "", "any_pulsemap_is_non_empty"], [35, 2, 1, "", "file_suffix"], [35, 3, 1, "", "merge_files"], [35, 3, 1, "", "save_data"]], "graphnet.data.sqlite.sqlite_utilities": [[36, 5, 1, "", "attach_index"], [36, 5, 1, "", "create_table"], [36, 5, 1, "", "create_table_and_save_to_sql"], [36, 5, 1, "", "database_exists"], [36, 5, 1, "", "database_table_exists"], [36, 5, 1, "", "run_sql_code"], [36, 5, 1, "", "save_to_sql"]], "graphnet.data.utilities": [[38, 0, 0, "-", "parquet_to_sqlite"], [39, 0, 0, "-", "random"], [40, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.parquet_to_sqlite": [[38, 1, 1, "", "ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter": [[38, 3, 1, "", "run"]], "graphnet.data.utilities.random": [[39, 5, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.string_selection_resolver": [[40, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[40, 3, 1, "", "resolve"]], "graphnet.models": [[50, 0, 0, "-", "detector"], [69, 0, 0, "-", "model"]], "graphnet.models.detector": [[51, 0, 0, "-", "detector"], [52, 0, 0, "-", "icecube"], [53, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[51, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[51, 3, 1, "", "feature_map"], [51, 3, 1, "", "forward"], [51, 4, 1, "", "geometry_table"], [51, 4, 1, "", "sensor_index_name"], [51, 4, 1, "", "sensor_position_names"], [51, 4, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[52, 1, 1, "", "IceCube86"], [52, 1, 1, "", "IceCubeDeepCore"], [52, 1, 1, "", "IceCubeKaggle"], [52, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[52, 3, 1, "", "feature_map"], [52, 2, 1, "", "geometry_table_path"], [52, 2, 1, "", "sensor_id_column"], [52, 2, 1, "", "string_id_column"], [52, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[52, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[52, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[52, 3, 1, "", "feature_map"], [52, 2, 1, "", "geometry_table_path"], [52, 2, 1, "", "sensor_id_column"], [52, 2, 1, "", "string_id_column"], [52, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[53, 1, 1, "", "ORCA150"], [53, 1, 1, "", "Prometheus"]], "graphnet.models.detector.prometheus.ORCA150": [[53, 3, 1, "", "feature_map"], [53, 2, 1, "", "geometry_table_path"], [53, 2, 1, "", "sensor_id_column"], [53, 2, 1, "", "string_id_column"], [53, 2, 1, "", "xyz"]], "graphnet.models.model": [[69, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[69, 3, 1, "", "from_config"], [69, 3, 1, "", "load"], [69, 3, 1, "", "load_state_dict"], [69, 3, 1, "", "save"], [69, 3, 1, "", "save_state_dict"]], "graphnet.pisa": [[77, 0, 0, "-", "fitting"], [78, 0, 0, "-", "plotting"]], "graphnet.pisa.fitting": [[77, 1, 1, "", "ContourFitter"], [77, 1, 1, "", "WeightFitter"], [77, 5, 1, "", "config_updater"]], "graphnet.pisa.fitting.ContourFitter": [[77, 3, 1, "", "fit_1d_contour"], [77, 3, 1, "", "fit_2d_contour"]], "graphnet.pisa.fitting.WeightFitter": [[77, 3, 1, "", "fit_weights"]], "graphnet.pisa.plotting": [[78, 5, 1, "", "plot_1D_contour"], [78, 5, 1, "", "plot_2D_contour"], [78, 5, 1, "", "read_entry"]], "graphnet.training": [[80, 0, 0, "-", "callbacks"], [81, 0, 0, "-", "labels"], [82, 0, 0, "-", "loss_functions"], [84, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[80, 1, 1, "", "GraphnetEarlyStopping"], [80, 1, 1, "", "PiecewiseLinearLR"], [80, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[80, 3, 1, "", "on_fit_end"], [80, 3, 1, "", "on_train_epoch_end"], [80, 3, 1, "", "on_validation_end"], [80, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[80, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[80, 3, 1, "", "get_metrics"], [80, 3, 1, "", "init_predict_tqdm"], [80, 3, 1, "", "init_test_tqdm"], [80, 3, 1, "", "init_train_tqdm"], [80, 3, 1, "", "init_validation_tqdm"], [80, 3, 1, "", "on_train_epoch_end"], [80, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[81, 1, 1, "", "Direction"], [81, 1, 1, "", "Label"]], "graphnet.training.labels.Label": [[81, 4, 1, "", "key"]], "graphnet.training.loss_functions": [[82, 1, 1, "", "BinaryCrossEntropyLoss"], [82, 1, 1, "", "CrossEntropyLoss"], [82, 1, 1, "", "EuclideanDistanceLoss"], [82, 1, 1, "", "LogCMK"], [82, 1, 1, "", "LogCoshLoss"], [82, 1, 1, "", "LossFunction"], [82, 1, 1, "", "MSELoss"], [82, 1, 1, "", "RMSELoss"], [82, 1, 1, "", "VonMisesFisher2DLoss"], [82, 1, 1, "", "VonMisesFisher3DLoss"], [82, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[82, 3, 1, "", "backward"], [82, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[82, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[82, 3, 1, "", "log_cmk"], [82, 3, 1, "", "log_cmk_approx"], [82, 3, 1, "", "log_cmk_exact"]], "graphnet.training.weight_fitting": [[84, 1, 1, "", "BjoernLow"], [84, 1, 1, "", "Uniform"], [84, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[84, 3, 1, "", "fit"]], "graphnet.utilities": [[86, 0, 0, "-", "argparse"], [87, 0, 0, "-", "config"], [94, 0, 0, "-", "decorators"], [95, 0, 0, "-", "deprecation_tools"], [96, 0, 0, "-", "filesys"], [97, 0, 0, "-", "imports"], [98, 0, 0, "-", "logging"], [99, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[86, 1, 1, "", "ArgumentParser"], [86, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[86, 2, 1, "", "standard_arguments"], [86, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[86, 3, 1, "", "contains"], [86, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[88, 0, 0, "-", "base_config"], [89, 0, 0, "-", "configurable"], [90, 0, 0, "-", "dataset_config"], [91, 0, 0, "-", "model_config"], [92, 0, 0, "-", "parsing"], [93, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[88, 1, 1, "", "BaseConfig"], [88, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[88, 3, 1, "", "as_dict"], [88, 3, 1, "", "dump"], [88, 3, 1, "", "load"], [88, 2, 1, "", "model_computed_fields"], [88, 2, 1, "", "model_config"], [88, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[89, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[89, 4, 1, "", "config"], [89, 3, 1, "", "from_config"], [89, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[90, 1, 1, "", "DatasetConfig"], [90, 1, 1, "", "DatasetConfigSaverABCMeta"], [90, 1, 1, "", "DatasetConfigSaverMeta"], [90, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[90, 3, 1, "", "as_dict"], [90, 2, 1, "", "features"], [90, 2, 1, "", "graph_definition"], [90, 2, 1, "", "index_column"], [90, 2, 1, "", "loss_weight_column"], [90, 2, 1, "", "loss_weight_default_value"], [90, 2, 1, "", "loss_weight_table"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "node_truth"], [90, 2, 1, "", "node_truth_table"], [90, 2, 1, "", "path"], [90, 2, 1, "", "pulsemaps"], [90, 2, 1, "", "seed"], [90, 2, 1, "", "selection"], [90, 2, 1, "", "string_selection"], [90, 2, 1, "", "truth"], [90, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[91, 1, 1, "", "ModelConfig"], [91, 1, 1, "", "ModelConfigSaverABC"], [91, 1, 1, "", "ModelConfigSaverMeta"], [91, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[91, 2, 1, "", "arguments"], [91, 3, 1, "", "as_dict"], [91, 2, 1, "", "class_name"], [91, 2, 1, "", "model_computed_fields"], [91, 2, 1, "", "model_config"], [91, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[92, 5, 1, "", "get_all_grapnet_classes"], [92, 5, 1, "", "get_graphnet_classes"], [92, 5, 1, "", "is_graphnet_class"], [92, 5, 1, "", "is_graphnet_module"], [92, 5, 1, "", "list_all_submodules"], [92, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[93, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[93, 2, 1, "", "dataloader"], [93, 2, 1, "", "early_stopping_patience"], [93, 2, 1, "", "fit"], [93, 2, 1, "", "model_computed_fields"], [93, 2, 1, "", "model_config"], [93, 2, 1, "", "model_fields"], [93, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[95, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[96, 5, 1, "", "find_i3_files"], [96, 5, 1, "", "has_extension"], [96, 5, 1, "", "is_gcd_file"], [96, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[97, 5, 1, "", "has_icecube_package"], [97, 5, 1, "", "has_pisa_package"], [97, 5, 1, "", "has_torch_package"], [97, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[98, 1, 1, "", "Logger"], [98, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[98, 3, 1, "", "critical"], [98, 3, 1, "", "debug"], [98, 3, 1, "", "error"], [98, 4, 1, "", "file_handlers"], [98, 4, 1, "", "handlers"], [98, 3, 1, "", "info"], [98, 3, 1, "", "setLevel"], [98, 4, 1, "", "stream_handlers"], [98, 3, 1, "", "warning"], [98, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[98, 3, 1, "", "filter"], [98, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[99, 5, 1, "", "eps_like"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"about": [0, 102], "impact": [0, 102], "usag": [0, 102], "acknowledg": [0, 102], "api": 1, "constant": [2, 4], "data": 3, "dataconvert": 5, "dataload": 6, "dataset": [7, 8], "parquet": [9, 31], "parquet_dataset": 10, "sqlite": [11, 34], "sqlite_dataset": 12, "extractor": 13, "i3extractor": 14, "i3featureextractor": 15, "i3genericextractor": 16, "i3hybridrecoextractor": 17, "i3ntmuonlabelsextractor": 18, "i3particleextractor": 19, "i3pisaextractor": 20, "i3quesoextractor": 21, "i3retroextractor": 22, "i3splinempeextractor": 23, "i3truthextractor": 24, "i3tumextractor": 25, "util": [26, 37, 68, 75, 83, 85], "collect": 27, "frame": 28, "type": 29, "filter": 30, "parquet_dataconvert": 32, "pipelin": 33, "sqlite_dataconvert": 35, "sqlite_util": 36, "parquet_to_sqlit": 38, "random": 39, "string_selection_resolv": 40, "deploy": [41, 43], "i3modul": 42, "graphnet_modul": 44, "model": [45, 69], "coarsen": 46, "compon": 47, "layer": 48, "pool": 49, "detector": [50, 51], "icecub": 52, "prometheu": 53, "gnn": [54, 59], "convnet": 55, "dynedg": 56, "dynedge_jinst": 57, "dynedge_kaggle_tito": 58, "graph": [60, 65], "edg": [61, 62], "minkowski": 63, "graph_definit": 64, "node": [66, 67], "standard_model": 70, "task": [71, 74], "classif": 72, "reconstruct": 73, "pisa": 76, "fit": 77, "plot": 78, "train": 79, "callback": 80, "label": 81, "loss_funct": 82, "weight_fit": 84, "argpars": 86, "config": 87, "base_config": 88, "configur": 89, "dataset_config": 90, "model_config": 91, "pars": 92, "training_config": 93, "decor": 94, "deprecation_tool": 95, "filesi": 96, "import": 97, "log": 98, "math": 99, "src": 100, "contribut": 101, "github": 101, "issu": 101, "pull": 101, "request": 101, "convent": 101, "code": 101, "qualiti": 101, "instal": 103, "icetrai": 103, "stand": 103, "alon": 103, "run": 103, "docker": 103}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"About": [[0, "about"], [102, "about"]], "Impact": [[0, "impact"], [102, "impact"]], "Usage": [[0, "usage"], [102, "usage"]], "Acknowledgements": [[0, "acknowledgements"], [102, "acknowledgements"]], "API": [[1, "module-graphnet"]], "constants": [[2, "module-graphnet.constants"], [4, "module-graphnet.data.constants"]], "data": [[3, "module-graphnet.data"]], "dataconverter": [[5, "module-graphnet.data.dataconverter"]], "dataloader": [[6, "dataloader"]], "dataset": [[7, "dataset"], [8, "dataset"]], "parquet": [[9, "parquet"], [31, "module-graphnet.data.parquet"]], "parquet_dataset": [[10, "parquet-dataset"]], "sqlite": [[11, "sqlite"], [34, "module-graphnet.data.sqlite"]], "sqlite_dataset": [[12, "sqlite-dataset"]], "extractors": [[13, "module-graphnet.data.extractors"]], "i3extractor": [[14, "module-graphnet.data.extractors.i3extractor"]], "i3featureextractor": [[15, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor": [[16, "module-graphnet.data.extractors.i3genericextractor"]], "i3hybridrecoextractor": [[17, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelsextractor": [[18, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor": [[19, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor": [[20, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor": [[21, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor": [[22, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeextractor": [[23, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor": [[24, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor": [[25, "module-graphnet.data.extractors.i3tumextractor"]], "utilities": [[26, "module-graphnet.data.extractors.utilities"], [37, "module-graphnet.data.utilities"], [85, "module-graphnet.utilities"]], "collections": [[27, "module-graphnet.data.extractors.utilities.collections"]], "frames": [[28, "module-graphnet.data.extractors.utilities.frames"]], "types": [[29, "module-graphnet.data.extractors.utilities.types"]], "filters": [[30, "module-graphnet.data.filters"]], "parquet_dataconverter": [[32, "module-graphnet.data.parquet.parquet_dataconverter"]], "pipeline": [[33, "pipeline"]], "sqlite_dataconverter": [[35, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "sqlite_utilities": [[36, "module-graphnet.data.sqlite.sqlite_utilities"]], "parquet_to_sqlite": [[38, "module-graphnet.data.utilities.parquet_to_sqlite"]], "random": [[39, "module-graphnet.data.utilities.random"]], "string_selection_resolver": [[40, "module-graphnet.data.utilities.string_selection_resolver"]], "deployment": [[41, "module-graphnet.deployment"]], "i3modules": [[42, "i3modules"]], "deployer": [[43, "deployer"]], "graphnet_module": [[44, "graphnet-module"]], "models": [[45, "models"]], "coarsening": [[46, "coarsening"]], "components": [[47, "components"]], "layers": [[48, "layers"]], "pool": [[49, "pool"]], "detector": [[50, "module-graphnet.models.detector"], [51, "module-graphnet.models.detector.detector"]], "icecube": [[52, "module-graphnet.models.detector.icecube"]], "prometheus": [[53, "module-graphnet.models.detector.prometheus"]], "gnn": [[54, "gnn"], [59, "gnn"]], "convnet": [[55, "convnet"]], "dynedge": [[56, "dynedge"]], "dynedge_jinst": [[57, "dynedge-jinst"]], "dynedge_kaggle_tito": [[58, "dynedge-kaggle-tito"]], "graphs": [[60, "graphs"], [65, "graphs"]], "edges": [[61, "edges"], [62, "edges"]], "minkowski": [[63, "minkowski"]], "graph_definition": [[64, "graph-definition"]], "nodes": [[66, "nodes"], [67, "nodes"]], "utils": [[68, "utils"], [75, "utils"], [83, "utils"]], "model": [[69, "module-graphnet.models.model"]], "standard_model": [[70, "standard-model"]], "task": [[71, "task"], [74, "task"]], "classification": [[72, "classification"]], "reconstruction": [[73, "reconstruction"]], "pisa": [[76, "module-graphnet.pisa"]], "fitting": [[77, "module-graphnet.pisa.fitting"]], "plotting": [[78, "module-graphnet.pisa.plotting"]], "training": [[79, "module-graphnet.training"]], "callbacks": [[80, "module-graphnet.training.callbacks"]], "labels": [[81, "module-graphnet.training.labels"]], "loss_functions": [[82, "module-graphnet.training.loss_functions"]], "weight_fitting": [[84, "module-graphnet.training.weight_fitting"]], "argparse": [[86, "module-graphnet.utilities.argparse"]], "config": [[87, "module-graphnet.utilities.config"]], "base_config": [[88, "module-graphnet.utilities.config.base_config"]], "configurable": [[89, "module-graphnet.utilities.config.configurable"]], "dataset_config": [[90, "module-graphnet.utilities.config.dataset_config"]], "model_config": [[91, "module-graphnet.utilities.config.model_config"]], "parsing": [[92, "module-graphnet.utilities.config.parsing"]], "training_config": [[93, "module-graphnet.utilities.config.training_config"]], "decorators": [[94, "module-graphnet.utilities.decorators"]], "deprecation_tools": [[95, "module-graphnet.utilities.deprecation_tools"]], "filesys": [[96, "module-graphnet.utilities.filesys"]], "imports": [[97, "module-graphnet.utilities.imports"]], "logging": [[98, "module-graphnet.utilities.logging"]], "maths": [[99, "module-graphnet.utilities.maths"]], "src": [[100, "src"]], "Contribute": [[101, "contribute"]], "GitHub issues": [[101, "github-issues"]], "Pull requests": [[101, "pull-requests"]], "Conventions": [[101, "conventions"]], "Code quality": [[101, "code-quality"]], "Install": [[103, "install"]], "Installing with IceTray": [[103, "installing-with-icetray"]], "Installing stand-alone": [[103, "installing-stand-alone"]], "Running in Docker": [[103, "running-in-docker"]]}, "indexentries": {"graphnet": [[1, "module-graphnet"]], "module": [[1, "module-graphnet"], [2, "module-graphnet.constants"], [3, "module-graphnet.data"], [4, "module-graphnet.data.constants"], [5, "module-graphnet.data.dataconverter"], [13, "module-graphnet.data.extractors"], [14, "module-graphnet.data.extractors.i3extractor"], [15, "module-graphnet.data.extractors.i3featureextractor"], [16, "module-graphnet.data.extractors.i3genericextractor"], [17, "module-graphnet.data.extractors.i3hybridrecoextractor"], [18, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"], [19, "module-graphnet.data.extractors.i3particleextractor"], [20, "module-graphnet.data.extractors.i3pisaextractor"], [21, "module-graphnet.data.extractors.i3quesoextractor"], [22, "module-graphnet.data.extractors.i3retroextractor"], [23, "module-graphnet.data.extractors.i3splinempeextractor"], [24, "module-graphnet.data.extractors.i3truthextractor"], [25, "module-graphnet.data.extractors.i3tumextractor"], [26, "module-graphnet.data.extractors.utilities"], [27, "module-graphnet.data.extractors.utilities.collections"], [28, "module-graphnet.data.extractors.utilities.frames"], [29, "module-graphnet.data.extractors.utilities.types"], [30, "module-graphnet.data.filters"], [31, "module-graphnet.data.parquet"], [32, "module-graphnet.data.parquet.parquet_dataconverter"], [34, "module-graphnet.data.sqlite"], [35, "module-graphnet.data.sqlite.sqlite_dataconverter"], [36, "module-graphnet.data.sqlite.sqlite_utilities"], [37, "module-graphnet.data.utilities"], [38, "module-graphnet.data.utilities.parquet_to_sqlite"], [39, "module-graphnet.data.utilities.random"], [40, "module-graphnet.data.utilities.string_selection_resolver"], [41, "module-graphnet.deployment"], [50, "module-graphnet.models.detector"], [51, "module-graphnet.models.detector.detector"], [52, "module-graphnet.models.detector.icecube"], [53, "module-graphnet.models.detector.prometheus"], [69, "module-graphnet.models.model"], [76, "module-graphnet.pisa"], [77, "module-graphnet.pisa.fitting"], [78, "module-graphnet.pisa.plotting"], [79, "module-graphnet.training"], [80, "module-graphnet.training.callbacks"], [81, "module-graphnet.training.labels"], [82, "module-graphnet.training.loss_functions"], [84, "module-graphnet.training.weight_fitting"], [85, "module-graphnet.utilities"], [86, "module-graphnet.utilities.argparse"], [87, "module-graphnet.utilities.config"], [88, "module-graphnet.utilities.config.base_config"], [89, "module-graphnet.utilities.config.configurable"], [90, "module-graphnet.utilities.config.dataset_config"], [91, "module-graphnet.utilities.config.model_config"], [92, "module-graphnet.utilities.config.parsing"], [93, "module-graphnet.utilities.config.training_config"], [94, "module-graphnet.utilities.decorators"], [95, "module-graphnet.utilities.deprecation_tools"], [96, "module-graphnet.utilities.filesys"], [97, "module-graphnet.utilities.imports"], [98, "module-graphnet.utilities.logging"], [99, "module-graphnet.utilities.maths"]], "graphnet.constants": [[2, "module-graphnet.constants"]], "graphnet.data": [[3, "module-graphnet.data"]], "deepcore (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.DEEPCORE"]], "deepcore (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.DEEPCORE"]], "features (class in graphnet.data.constants)": [[4, "graphnet.data.constants.FEATURES"]], "icecube86 (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.ICECUBE86"]], "icecube86 (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.ICECUBE86"]], "kaggle (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.KAGGLE"]], "kaggle (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.KAGGLE"]], "prometheus (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.PROMETHEUS"]], "prometheus (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.PROMETHEUS"]], "truth (class in graphnet.data.constants)": [[4, "graphnet.data.constants.TRUTH"]], "upgrade (graphnet.data.constants.features attribute)": [[4, "graphnet.data.constants.FEATURES.UPGRADE"]], "upgrade (graphnet.data.constants.truth attribute)": [[4, "graphnet.data.constants.TRUTH.UPGRADE"]], "graphnet.data.constants": [[4, "module-graphnet.data.constants"]], "dataconverter (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.DataConverter"]], "fileset (class in graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.FileSet"]], "cache_output_files() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.cache_output_files"]], "execute() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.execute"]], "file_suffix (graphnet.data.dataconverter.dataconverter property)": [[5, "graphnet.data.dataconverter.DataConverter.file_suffix"]], "gcd_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.gcd_file"]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.get_map_function"]], "graphnet.data.dataconverter": [[5, "module-graphnet.data.dataconverter"]], "i3_file (graphnet.data.dataconverter.fileset attribute)": [[5, "graphnet.data.dataconverter.FileSet.i3_file"]], "init_global_index() (in module graphnet.data.dataconverter)": [[5, "graphnet.data.dataconverter.init_global_index"]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.merge_files"]], "save_data() (graphnet.data.dataconverter.dataconverter method)": [[5, "graphnet.data.dataconverter.DataConverter.save_data"]], "graphnet.data.extractors": [[13, "module-graphnet.data.extractors"]], "i3extractor (class in graphnet.data.extractors.i3extractor)": [[14, "graphnet.data.extractors.i3extractor.I3Extractor"]], "i3extractorcollection (class in graphnet.data.extractors.i3extractor)": [[14, "graphnet.data.extractors.i3extractor.I3ExtractorCollection"]], "graphnet.data.extractors.i3extractor": [[14, "module-graphnet.data.extractors.i3extractor"]], "name (graphnet.data.extractors.i3extractor.i3extractor property)": [[14, "graphnet.data.extractors.i3extractor.I3Extractor.name"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractor method)": [[14, "graphnet.data.extractors.i3extractor.I3Extractor.set_files"]], "set_files() (graphnet.data.extractors.i3extractor.i3extractorcollection method)": [[14, "graphnet.data.extractors.i3extractor.I3ExtractorCollection.set_files"]], "i3featureextractor (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractor"]], "i3featureextractoricecube86 (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCube86"]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeDeepCore"]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3FeatureExtractorIceCubeUpgrade"]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.i3featureextractor)": [[15, "graphnet.data.extractors.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.i3featureextractor": [[15, "module-graphnet.data.extractors.i3featureextractor"]], "i3genericextractor (class in graphnet.data.extractors.i3genericextractor)": [[16, "graphnet.data.extractors.i3genericextractor.I3GenericExtractor"]], "graphnet.data.extractors.i3genericextractor": [[16, "module-graphnet.data.extractors.i3genericextractor"]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.i3hybridrecoextractor)": [[17, "graphnet.data.extractors.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.i3hybridrecoextractor": [[17, "module-graphnet.data.extractors.i3hybridrecoextractor"]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.i3ntmuonlabelsextractor)": [[18, "graphnet.data.extractors.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor"]], "graphnet.data.extractors.i3ntmuonlabelsextractor": [[18, "module-graphnet.data.extractors.i3ntmuonlabelsextractor"]], "i3particleextractor (class in graphnet.data.extractors.i3particleextractor)": [[19, "graphnet.data.extractors.i3particleextractor.I3ParticleExtractor"]], "graphnet.data.extractors.i3particleextractor": [[19, "module-graphnet.data.extractors.i3particleextractor"]], "i3pisaextractor (class in graphnet.data.extractors.i3pisaextractor)": [[20, "graphnet.data.extractors.i3pisaextractor.I3PISAExtractor"]], "graphnet.data.extractors.i3pisaextractor": [[20, "module-graphnet.data.extractors.i3pisaextractor"]], "i3quesoextractor (class in graphnet.data.extractors.i3quesoextractor)": [[21, "graphnet.data.extractors.i3quesoextractor.I3QUESOExtractor"]], "graphnet.data.extractors.i3quesoextractor": [[21, "module-graphnet.data.extractors.i3quesoextractor"]], "i3retroextractor (class in graphnet.data.extractors.i3retroextractor)": [[22, "graphnet.data.extractors.i3retroextractor.I3RetroExtractor"]], "graphnet.data.extractors.i3retroextractor": [[22, "module-graphnet.data.extractors.i3retroextractor"]], "i3splinempeicextractor (class in graphnet.data.extractors.i3splinempeextractor)": [[23, "graphnet.data.extractors.i3splinempeextractor.I3SplineMPEICExtractor"]], "graphnet.data.extractors.i3splinempeextractor": [[23, "module-graphnet.data.extractors.i3splinempeextractor"]], "i3truthextractor (class in graphnet.data.extractors.i3truthextractor)": [[24, "graphnet.data.extractors.i3truthextractor.I3TruthExtractor"]], "graphnet.data.extractors.i3truthextractor": [[24, "module-graphnet.data.extractors.i3truthextractor"]], "i3tumextractor (class in graphnet.data.extractors.i3tumextractor)": [[25, "graphnet.data.extractors.i3tumextractor.I3TUMExtractor"]], "graphnet.data.extractors.i3tumextractor": [[25, "module-graphnet.data.extractors.i3tumextractor"]], "graphnet.data.extractors.utilities": [[26, "module-graphnet.data.extractors.utilities"]], "flatten_nested_dictionary() (in module graphnet.data.extractors.utilities.collections)": [[27, "graphnet.data.extractors.utilities.collections.flatten_nested_dictionary"]], "graphnet.data.extractors.utilities.collections": [[27, "module-graphnet.data.extractors.utilities.collections"]], "serialise() (in module graphnet.data.extractors.utilities.collections)": [[27, "graphnet.data.extractors.utilities.collections.serialise"]], "transpose_list_of_dicts() (in module graphnet.data.extractors.utilities.collections)": [[27, "graphnet.data.extractors.utilities.collections.transpose_list_of_dicts"]], "frame_is_montecarlo() (in module graphnet.data.extractors.utilities.frames)": [[28, "graphnet.data.extractors.utilities.frames.frame_is_montecarlo"]], "frame_is_noise() (in module graphnet.data.extractors.utilities.frames)": [[28, "graphnet.data.extractors.utilities.frames.frame_is_noise"]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.utilities.frames)": [[28, "graphnet.data.extractors.utilities.frames.get_om_keys_and_pulseseries"]], "graphnet.data.extractors.utilities.frames": [[28, "module-graphnet.data.extractors.utilities.frames"]], "break_cyclic_recursion() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.break_cyclic_recursion"]], "cast_object_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.cast_object_to_pure_python"]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.cast_pulse_series_to_pure_python"]], "get_member_variables() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.get_member_variables"]], "graphnet.data.extractors.utilities.types": [[29, "module-graphnet.data.extractors.utilities.types"]], "is_boost_class() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_boost_class"]], "is_boost_enum() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_boost_enum"]], "is_icecube_class() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_icecube_class"]], "is_method() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_method"]], "is_type() (in module graphnet.data.extractors.utilities.types)": [[29, "graphnet.data.extractors.utilities.types.is_type"]], "i3filter (class in graphnet.data.filters)": [[30, "graphnet.data.filters.I3Filter"]], "i3filtermask (class in graphnet.data.filters)": [[30, "graphnet.data.filters.I3FilterMask"]], "nullspliti3filter (class in graphnet.data.filters)": [[30, "graphnet.data.filters.NullSplitI3Filter"]], "graphnet.data.filters": [[30, "module-graphnet.data.filters"]], "graphnet.data.parquet": [[31, "module-graphnet.data.parquet"]], "parquetdataconverter (class in graphnet.data.parquet.parquet_dataconverter)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter"]], "file_suffix (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter attribute)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.file_suffix"]], "graphnet.data.parquet.parquet_dataconverter": [[32, "module-graphnet.data.parquet.parquet_dataconverter"]], "merge_files() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.merge_files"]], "save_data() (graphnet.data.parquet.parquet_dataconverter.parquetdataconverter method)": [[32, "graphnet.data.parquet.parquet_dataconverter.ParquetDataConverter.save_data"]], "graphnet.data.sqlite": [[34, "module-graphnet.data.sqlite"]], "sqlitedataconverter (class in graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter"]], "any_pulsemap_is_non_empty() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.any_pulsemap_is_non_empty"]], "construct_dataframe() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.construct_dataframe"]], "file_suffix (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter attribute)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.file_suffix"]], "graphnet.data.sqlite.sqlite_dataconverter": [[35, "module-graphnet.data.sqlite.sqlite_dataconverter"]], "is_mc_tree() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.is_mc_tree"]], "is_pulse_map() (in module graphnet.data.sqlite.sqlite_dataconverter)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.is_pulse_map"]], "merge_files() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.merge_files"]], "save_data() (graphnet.data.sqlite.sqlite_dataconverter.sqlitedataconverter method)": [[35, "graphnet.data.sqlite.sqlite_dataconverter.SQLiteDataConverter.save_data"]], "attach_index() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.attach_index"]], "create_table() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.create_table"]], "create_table_and_save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.create_table_and_save_to_sql"]], "database_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.database_exists"]], "database_table_exists() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.database_table_exists"]], "graphnet.data.sqlite.sqlite_utilities": [[36, "module-graphnet.data.sqlite.sqlite_utilities"]], "run_sql_code() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.run_sql_code"]], "save_to_sql() (in module graphnet.data.sqlite.sqlite_utilities)": [[36, "graphnet.data.sqlite.sqlite_utilities.save_to_sql"]], "graphnet.data.utilities": [[37, "module-graphnet.data.utilities"]], "parquettosqliteconverter (class in graphnet.data.utilities.parquet_to_sqlite)": [[38, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter"]], "graphnet.data.utilities.parquet_to_sqlite": [[38, "module-graphnet.data.utilities.parquet_to_sqlite"]], "run() (graphnet.data.utilities.parquet_to_sqlite.parquettosqliteconverter method)": [[38, "graphnet.data.utilities.parquet_to_sqlite.ParquetToSQLiteConverter.run"]], "graphnet.data.utilities.random": [[39, "module-graphnet.data.utilities.random"]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[39, "graphnet.data.utilities.random.pairwise_shuffle"]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[40, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver": [[40, "module-graphnet.data.utilities.string_selection_resolver"]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[40, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve"]], "graphnet.deployment": [[41, "module-graphnet.deployment"]], "graphnet.models.detector": [[50, "module-graphnet.models.detector"]], "detector (class in graphnet.models.detector.detector)": [[51, "graphnet.models.detector.detector.Detector"]], "feature_map() (graphnet.models.detector.detector.detector method)": [[51, "graphnet.models.detector.detector.Detector.feature_map"]], "forward() (graphnet.models.detector.detector.detector method)": [[51, "graphnet.models.detector.detector.Detector.forward"]], "geometry_table (graphnet.models.detector.detector.detector property)": [[51, "graphnet.models.detector.detector.Detector.geometry_table"]], "graphnet.models.detector.detector": [[51, "module-graphnet.models.detector.detector"]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[51, "graphnet.models.detector.detector.Detector.sensor_index_name"]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[51, "graphnet.models.detector.detector.Detector.sensor_position_names"]], "string_index_name (graphnet.models.detector.detector.detector property)": [[51, "graphnet.models.detector.detector.Detector.string_index_name"]], "icecube86 (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCube86"]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCubeDeepCore"]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCubeKaggle"]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade"]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[52, "graphnet.models.detector.icecube.IceCube86.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[52, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[52, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map"]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map"]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[52, "graphnet.models.detector.icecube.IceCube86.geometry_table_path"]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path"]], "graphnet.models.detector.icecube": [[52, "module-graphnet.models.detector.icecube"]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[52, "graphnet.models.detector.icecube.IceCube86.sensor_id_column"]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[52, "graphnet.models.detector.icecube.IceCube86.string_id_column"]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column"]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[52, "graphnet.models.detector.icecube.IceCube86.xyz"]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[52, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz"]], "orca150 (class in graphnet.models.detector.prometheus)": [[53, "graphnet.models.detector.prometheus.ORCA150"]], "prometheus (class in graphnet.models.detector.prometheus)": [[53, "graphnet.models.detector.prometheus.Prometheus"]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[53, "graphnet.models.detector.prometheus.ORCA150.feature_map"]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[53, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path"]], "graphnet.models.detector.prometheus": [[53, "module-graphnet.models.detector.prometheus"]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[53, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column"]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[53, "graphnet.models.detector.prometheus.ORCA150.string_id_column"]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[53, "graphnet.models.detector.prometheus.ORCA150.xyz"]], "model (class in graphnet.models.model)": [[69, "graphnet.models.model.Model"]], "from_config() (graphnet.models.model.model class method)": [[69, "graphnet.models.model.Model.from_config"]], "graphnet.models.model": [[69, "module-graphnet.models.model"]], "load() (graphnet.models.model.model class method)": [[69, "graphnet.models.model.Model.load"]], "load_state_dict() (graphnet.models.model.model method)": [[69, "graphnet.models.model.Model.load_state_dict"]], "save() (graphnet.models.model.model method)": [[69, "graphnet.models.model.Model.save"]], "save_state_dict() (graphnet.models.model.model method)": [[69, "graphnet.models.model.Model.save_state_dict"]], "graphnet.pisa": [[76, "module-graphnet.pisa"]], "contourfitter (class in graphnet.pisa.fitting)": [[77, "graphnet.pisa.fitting.ContourFitter"]], "weightfitter (class in graphnet.pisa.fitting)": [[77, "graphnet.pisa.fitting.WeightFitter"]], "config_updater() (in module graphnet.pisa.fitting)": [[77, "graphnet.pisa.fitting.config_updater"]], "fit_1d_contour() (graphnet.pisa.fitting.contourfitter method)": [[77, "graphnet.pisa.fitting.ContourFitter.fit_1d_contour"]], "fit_2d_contour() (graphnet.pisa.fitting.contourfitter method)": [[77, "graphnet.pisa.fitting.ContourFitter.fit_2d_contour"]], "fit_weights() (graphnet.pisa.fitting.weightfitter method)": [[77, "graphnet.pisa.fitting.WeightFitter.fit_weights"]], "graphnet.pisa.fitting": [[77, "module-graphnet.pisa.fitting"]], "graphnet.pisa.plotting": [[78, "module-graphnet.pisa.plotting"]], "plot_1d_contour() (in module graphnet.pisa.plotting)": [[78, "graphnet.pisa.plotting.plot_1D_contour"]], "plot_2d_contour() (in module graphnet.pisa.plotting)": [[78, "graphnet.pisa.plotting.plot_2D_contour"]], "read_entry() (in module graphnet.pisa.plotting)": [[78, "graphnet.pisa.plotting.read_entry"]], "graphnet.training": [[79, "module-graphnet.training"]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[80, "graphnet.training.callbacks.GraphnetEarlyStopping"]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[80, "graphnet.training.callbacks.PiecewiseLinearLR"]], "progressbar (class in graphnet.training.callbacks)": [[80, "graphnet.training.callbacks.ProgressBar"]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[80, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr"]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[80, "graphnet.training.callbacks.ProgressBar.get_metrics"]], "graphnet.training.callbacks": [[80, "module-graphnet.training.callbacks"]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[80, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm"]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[80, "graphnet.training.callbacks.ProgressBar.init_test_tqdm"]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[80, "graphnet.training.callbacks.ProgressBar.init_train_tqdm"]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[80, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm"]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[80, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end"]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[80, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end"]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[80, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end"]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[80, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start"]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[80, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end"]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[80, "graphnet.training.callbacks.GraphnetEarlyStopping.setup"]], "direction (class in graphnet.training.labels)": [[81, "graphnet.training.labels.Direction"]], "label (class in graphnet.training.labels)": [[81, "graphnet.training.labels.Label"]], "graphnet.training.labels": [[81, "module-graphnet.training.labels"]], "key (graphnet.training.labels.label property)": [[81, "graphnet.training.labels.Label.key"]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.BinaryCrossEntropyLoss"]], "crossentropyloss (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.CrossEntropyLoss"]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.EuclideanDistanceLoss"]], "logcmk (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.LogCMK"]], "logcoshloss (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.LogCoshLoss"]], "lossfunction (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.LossFunction"]], "mseloss (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.MSELoss"]], "rmseloss (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.RMSELoss"]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.VonMisesFisher2DLoss"]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.VonMisesFisher3DLoss"]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[82, "graphnet.training.loss_functions.VonMisesFisherLoss"]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[82, "graphnet.training.loss_functions.LogCMK.backward"]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[82, "graphnet.training.loss_functions.LogCMK.forward"]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[82, "graphnet.training.loss_functions.LossFunction.forward"]], "graphnet.training.loss_functions": [[82, "module-graphnet.training.loss_functions"]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[82, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk"]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[82, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx"]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[82, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact"]], "bjoernlow (class in graphnet.training.weight_fitting)": [[84, "graphnet.training.weight_fitting.BjoernLow"]], "uniform (class in graphnet.training.weight_fitting)": [[84, "graphnet.training.weight_fitting.Uniform"]], "weightfitter (class in graphnet.training.weight_fitting)": [[84, "graphnet.training.weight_fitting.WeightFitter"]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[84, "graphnet.training.weight_fitting.WeightFitter.fit"]], "graphnet.training.weight_fitting": [[84, "module-graphnet.training.weight_fitting"]], "graphnet.utilities": [[85, "module-graphnet.utilities"]], "argumentparser (class in graphnet.utilities.argparse)": [[86, "graphnet.utilities.argparse.ArgumentParser"]], "options (class in graphnet.utilities.argparse)": [[86, "graphnet.utilities.argparse.Options"]], "contains() (graphnet.utilities.argparse.options method)": [[86, "graphnet.utilities.argparse.Options.contains"]], "graphnet.utilities.argparse": [[86, "module-graphnet.utilities.argparse"]], "pop_default() (graphnet.utilities.argparse.options method)": [[86, "graphnet.utilities.argparse.Options.pop_default"]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[86, "graphnet.utilities.argparse.ArgumentParser.standard_arguments"]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[86, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments"]], "graphnet.utilities.config": [[87, "module-graphnet.utilities.config"]], "baseconfig (class in graphnet.utilities.config.base_config)": [[88, "graphnet.utilities.config.base_config.BaseConfig"]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[88, "graphnet.utilities.config.base_config.BaseConfig.as_dict"]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[88, "graphnet.utilities.config.base_config.BaseConfig.dump"]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[88, "graphnet.utilities.config.base_config.get_all_argument_values"]], "graphnet.utilities.config.base_config": [[88, "module-graphnet.utilities.config.base_config"]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[88, "graphnet.utilities.config.base_config.BaseConfig.load"]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[88, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[88, "graphnet.utilities.config.base_config.BaseConfig.model_config"]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[88, "graphnet.utilities.config.base_config.BaseConfig.model_fields"]], "configurable (class in graphnet.utilities.config.configurable)": [[89, "graphnet.utilities.config.configurable.Configurable"]], "config (graphnet.utilities.config.configurable.configurable property)": [[89, "graphnet.utilities.config.configurable.Configurable.config"]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[89, "graphnet.utilities.config.configurable.Configurable.from_config"]], "graphnet.utilities.config.configurable": [[89, "module-graphnet.utilities.config.configurable"]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[89, "graphnet.utilities.config.configurable.Configurable.save_config"]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig"]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta"]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta"]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict"]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.features"]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition"]], "graphnet.utilities.config.dataset_config": [[90, "module-graphnet.utilities.config.dataset_config"]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column"]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column"]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value"]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table"]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config"]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields"]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth"]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table"]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.path"]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps"]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[90, "graphnet.utilities.config.dataset_config.save_dataset_config"]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.seed"]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.selection"]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection"]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.truth"]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[90, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table"]], "modelconfig (class in graphnet.utilities.config.model_config)": [[91, "graphnet.utilities.config.model_config.ModelConfig"]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[91, "graphnet.utilities.config.model_config.ModelConfigSaverABC"]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[91, "graphnet.utilities.config.model_config.ModelConfigSaverMeta"]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[91, "graphnet.utilities.config.model_config.ModelConfig.arguments"]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[91, "graphnet.utilities.config.model_config.ModelConfig.as_dict"]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[91, "graphnet.utilities.config.model_config.ModelConfig.class_name"]], "graphnet.utilities.config.model_config": [[91, "module-graphnet.utilities.config.model_config"]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[91, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[91, "graphnet.utilities.config.model_config.ModelConfig.model_config"]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[91, "graphnet.utilities.config.model_config.ModelConfig.model_fields"]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[91, "graphnet.utilities.config.model_config.save_model_config"]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[92, "graphnet.utilities.config.parsing.get_all_grapnet_classes"]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[92, "graphnet.utilities.config.parsing.get_graphnet_classes"]], "graphnet.utilities.config.parsing": [[92, "module-graphnet.utilities.config.parsing"]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[92, "graphnet.utilities.config.parsing.is_graphnet_class"]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[92, "graphnet.utilities.config.parsing.is_graphnet_module"]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[92, "graphnet.utilities.config.parsing.list_all_submodules"]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[92, "graphnet.utilities.config.parsing.traverse_and_apply"]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[93, "graphnet.utilities.config.training_config.TrainingConfig"]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[93, "graphnet.utilities.config.training_config.TrainingConfig.dataloader"]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[93, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience"]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[93, "graphnet.utilities.config.training_config.TrainingConfig.fit"]], "graphnet.utilities.config.training_config": [[93, "module-graphnet.utilities.config.training_config"]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[93, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields"]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[93, "graphnet.utilities.config.training_config.TrainingConfig.model_config"]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[93, "graphnet.utilities.config.training_config.TrainingConfig.model_fields"]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[93, "graphnet.utilities.config.training_config.TrainingConfig.target"]], "graphnet.utilities.decorators": [[94, "module-graphnet.utilities.decorators"]], "graphnet.utilities.deprecation_tools": [[95, "module-graphnet.utilities.deprecation_tools"]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[95, "graphnet.utilities.deprecation_tools.rename_state_dict_entries"]], "find_i3_files() (in module graphnet.utilities.filesys)": [[96, "graphnet.utilities.filesys.find_i3_files"]], "graphnet.utilities.filesys": [[96, "module-graphnet.utilities.filesys"]], "has_extension() (in module graphnet.utilities.filesys)": [[96, "graphnet.utilities.filesys.has_extension"]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[96, "graphnet.utilities.filesys.is_gcd_file"]], "is_i3_file() (in module graphnet.utilities.filesys)": [[96, "graphnet.utilities.filesys.is_i3_file"]], "graphnet.utilities.imports": [[97, "module-graphnet.utilities.imports"]], "has_icecube_package() (in module graphnet.utilities.imports)": [[97, "graphnet.utilities.imports.has_icecube_package"]], "has_pisa_package() (in module graphnet.utilities.imports)": [[97, "graphnet.utilities.imports.has_pisa_package"]], "has_torch_package() (in module graphnet.utilities.imports)": [[97, "graphnet.utilities.imports.has_torch_package"]], "requires_icecube() (in module graphnet.utilities.imports)": [[97, "graphnet.utilities.imports.requires_icecube"]], "logger (class in graphnet.utilities.logging)": [[98, "graphnet.utilities.logging.Logger"]], "repeatfilter (class in graphnet.utilities.logging)": [[98, "graphnet.utilities.logging.RepeatFilter"]], "critical() (graphnet.utilities.logging.logger method)": [[98, "graphnet.utilities.logging.Logger.critical"]], "debug() (graphnet.utilities.logging.logger method)": [[98, "graphnet.utilities.logging.Logger.debug"]], "error() (graphnet.utilities.logging.logger method)": [[98, "graphnet.utilities.logging.Logger.error"]], "file_handlers (graphnet.utilities.logging.logger property)": [[98, "graphnet.utilities.logging.Logger.file_handlers"]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[98, "graphnet.utilities.logging.RepeatFilter.filter"]], "graphnet.utilities.logging": [[98, "module-graphnet.utilities.logging"]], "handlers (graphnet.utilities.logging.logger property)": [[98, "graphnet.utilities.logging.Logger.handlers"]], "info() (graphnet.utilities.logging.logger method)": [[98, "graphnet.utilities.logging.Logger.info"]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[98, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed"]], "setlevel() (graphnet.utilities.logging.logger method)": [[98, "graphnet.utilities.logging.Logger.setLevel"]], "stream_handlers (graphnet.utilities.logging.logger property)": [[98, "graphnet.utilities.logging.Logger.stream_handlers"]], "warning() (graphnet.utilities.logging.logger method)": [[98, "graphnet.utilities.logging.Logger.warning"]], "warning_once() (graphnet.utilities.logging.logger method)": [[98, "graphnet.utilities.logging.Logger.warning_once"]], "eps_like() (in module graphnet.utilities.maths)": [[99, "graphnet.utilities.maths.eps_like"]], "graphnet.utilities.maths": [[99, "module-graphnet.utilities.maths"]]}})